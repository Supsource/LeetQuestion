{"ast":null,"code":"import { useRef, useEffect, useCallback } from 'react';\nimport { createPortal } from 'react-dom';\nimport canUseDOM from 'dom-lib/canUseDOM';\n\nfunction usePortal(props) {\n  if (props === void 0) {\n    props = {};\n  }\n\n  var _props = props,\n      id = _props.id,\n      container = _props.container;\n  var rootElemRef = useRef(canUseDOM ? document.body : null);\n  useEffect(function () {\n    var containerElement = typeof container === 'function' ? container() : container; // Look for existing target dom element to append to\n\n    var existingParent = id && document.querySelector(\"#\" + id); // Parent is either a new root or the existing dom element\n\n    var parentElement = containerElement || existingParent || document.body;\n    rootElemRef.current = parentElement;\n  }, [rootElemRef, container, id]);\n  var Portal = useCallback(function (_ref) {\n    var children = _ref.children;\n    if (rootElemRef.current != null) return /*#__PURE__*/createPortal(children, rootElemRef.current);\n    return null;\n  }, [rootElemRef]);\n  return {\n    target: rootElemRef.current,\n    Portal: Portal\n  };\n}\n\nexport default usePortal;","map":{"version":3,"sources":["/Users/supriyomal/Documents/GitHub/LeetQuestion/node_modules/rsuite/esm/utils/usePortal.js"],"names":["useRef","useEffect","useCallback","createPortal","canUseDOM","usePortal","props","_props","id","container","rootElemRef","document","body","containerElement","existingParent","querySelector","parentElement","current","Portal","_ref","children","target"],"mappings":"AAAA,SAASA,MAAT,EAAiBC,SAAjB,EAA4BC,WAA5B,QAA+C,OAA/C;AACA,SAASC,YAAT,QAA6B,WAA7B;AACA,OAAOC,SAAP,MAAsB,mBAAtB;;AAEA,SAASC,SAAT,CAAmBC,KAAnB,EAA0B;AACxB,MAAIA,KAAK,KAAK,KAAK,CAAnB,EAAsB;AACpBA,IAAAA,KAAK,GAAG,EAAR;AACD;;AAED,MAAIC,MAAM,GAAGD,KAAb;AAAA,MACIE,EAAE,GAAGD,MAAM,CAACC,EADhB;AAAA,MAEIC,SAAS,GAAGF,MAAM,CAACE,SAFvB;AAGA,MAAIC,WAAW,GAAGV,MAAM,CAACI,SAAS,GAAGO,QAAQ,CAACC,IAAZ,GAAmB,IAA7B,CAAxB;AACAX,EAAAA,SAAS,CAAC,YAAY;AACpB,QAAIY,gBAAgB,GAAG,OAAOJ,SAAP,KAAqB,UAArB,GAAkCA,SAAS,EAA3C,GAAgDA,SAAvE,CADoB,CAC8D;;AAElF,QAAIK,cAAc,GAAGN,EAAE,IAAIG,QAAQ,CAACI,aAAT,CAAuB,MAAMP,EAA7B,CAA3B,CAHoB,CAGyC;;AAE7D,QAAIQ,aAAa,GAAGH,gBAAgB,IAAIC,cAApB,IAAsCH,QAAQ,CAACC,IAAnE;AACAF,IAAAA,WAAW,CAACO,OAAZ,GAAsBD,aAAtB;AACD,GAPQ,EAON,CAACN,WAAD,EAAcD,SAAd,EAAyBD,EAAzB,CAPM,CAAT;AAQA,MAAIU,MAAM,GAAGhB,WAAW,CAAC,UAAUiB,IAAV,EAAgB;AACvC,QAAIC,QAAQ,GAAGD,IAAI,CAACC,QAApB;AACA,QAAIV,WAAW,CAACO,OAAZ,IAAuB,IAA3B,EAAiC,OAAO,aAAad,YAAY,CAACiB,QAAD,EAAWV,WAAW,CAACO,OAAvB,CAAhC;AACjC,WAAO,IAAP;AACD,GAJuB,EAIrB,CAACP,WAAD,CAJqB,CAAxB;AAKA,SAAO;AACLW,IAAAA,MAAM,EAAEX,WAAW,CAACO,OADf;AAELC,IAAAA,MAAM,EAAEA;AAFH,GAAP;AAID;;AAED,eAAeb,SAAf","sourcesContent":["import { useRef, useEffect, useCallback } from 'react';\nimport { createPortal } from 'react-dom';\nimport canUseDOM from 'dom-lib/canUseDOM';\n\nfunction usePortal(props) {\n  if (props === void 0) {\n    props = {};\n  }\n\n  var _props = props,\n      id = _props.id,\n      container = _props.container;\n  var rootElemRef = useRef(canUseDOM ? document.body : null);\n  useEffect(function () {\n    var containerElement = typeof container === 'function' ? container() : container; // Look for existing target dom element to append to\n\n    var existingParent = id && document.querySelector(\"#\" + id); // Parent is either a new root or the existing dom element\n\n    var parentElement = containerElement || existingParent || document.body;\n    rootElemRef.current = parentElement;\n  }, [rootElemRef, container, id]);\n  var Portal = useCallback(function (_ref) {\n    var children = _ref.children;\n    if (rootElemRef.current != null) return /*#__PURE__*/createPortal(children, rootElemRef.current);\n    return null;\n  }, [rootElemRef]);\n  return {\n    target: rootElemRef.current,\n    Portal: Portal\n  };\n}\n\nexport default usePortal;"]},"metadata":{},"sourceType":"module"}