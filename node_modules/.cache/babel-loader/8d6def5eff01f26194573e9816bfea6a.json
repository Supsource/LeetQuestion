{"ast":null,"code":"/**\n * Check whether a row(tree) node should be expanded.\n * @param expandedRowKeys An array of all expanded nodes.\n * @param parentKeys All parent nodes of the current node\n * @returns boolean\n */\nexport default function shouldShowRowByExpanded(expandedRowKeys, parentKeys) {\n  if (expandedRowKeys === void 0) {\n    expandedRowKeys = [];\n  }\n\n  if (parentKeys === void 0) {\n    parentKeys = [];\n  }\n\n  for (var i = 0; i < ((_parentKeys = parentKeys) === null || _parentKeys === void 0 ? void 0 : _parentKeys.length); i++) {\n    var _parentKeys, _expandedRowKeys;\n\n    if (((_expandedRowKeys = expandedRowKeys) === null || _expandedRowKeys === void 0 ? void 0 : _expandedRowKeys.indexOf(parentKeys[i])) === -1) {\n      return false;\n    }\n  }\n\n  return true;\n}","map":{"version":3,"sources":["/Users/supriyomal/Documents/GitHub/LeetQuestion/node_modules/rsuite-table/es/utils/shouldShowRowByExpanded.js"],"names":["shouldShowRowByExpanded","expandedRowKeys","parentKeys","i","_parentKeys","length","_expandedRowKeys","indexOf"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,SAASA,uBAAT,CAAiCC,eAAjC,EAAkDC,UAAlD,EAA8D;AAC3E,MAAID,eAAe,KAAK,KAAK,CAA7B,EAAgC;AAC9BA,IAAAA,eAAe,GAAG,EAAlB;AACD;;AAED,MAAIC,UAAU,KAAK,KAAK,CAAxB,EAA2B;AACzBA,IAAAA,UAAU,GAAG,EAAb;AACD;;AAED,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAI,CAACC,WAAW,GAAGF,UAAf,MAA+B,IAA/B,IAAuCE,WAAW,KAAK,KAAK,CAA5D,GAAgE,KAAK,CAArE,GAAyEA,WAAW,CAACC,MAAzF,CAAjB,EAAmHF,CAAC,EAApH,EAAwH;AACtH,QAAIC,WAAJ,EAAiBE,gBAAjB;;AAEA,QAAI,CAAC,CAACA,gBAAgB,GAAGL,eAApB,MAAyC,IAAzC,IAAiDK,gBAAgB,KAAK,KAAK,CAA3E,GAA+E,KAAK,CAApF,GAAwFA,gBAAgB,CAACC,OAAjB,CAAyBL,UAAU,CAACC,CAAD,CAAnC,CAAzF,MAAsI,CAAC,CAA3I,EAA8I;AAC5I,aAAO,KAAP;AACD;AACF;;AAED,SAAO,IAAP;AACD","sourcesContent":["/**\n * Check whether a row(tree) node should be expanded.\n * @param expandedRowKeys An array of all expanded nodes.\n * @param parentKeys All parent nodes of the current node\n * @returns boolean\n */\nexport default function shouldShowRowByExpanded(expandedRowKeys, parentKeys) {\n  if (expandedRowKeys === void 0) {\n    expandedRowKeys = [];\n  }\n\n  if (parentKeys === void 0) {\n    parentKeys = [];\n  }\n\n  for (var i = 0; i < ((_parentKeys = parentKeys) === null || _parentKeys === void 0 ? void 0 : _parentKeys.length); i++) {\n    var _parentKeys, _expandedRowKeys;\n\n    if (((_expandedRowKeys = expandedRowKeys) === null || _expandedRowKeys === void 0 ? void 0 : _expandedRowKeys.indexOf(parentKeys[i])) === -1) {\n      return false;\n    }\n  }\n\n  return true;\n}"]},"metadata":{},"sourceType":"module"}