{"ast":null,"code":"import trim from 'lodash/trim';\nexport function transformData(data) {\n  if (!data) {\n    return [];\n  }\n\n  return data.map(function (item) {\n    if (typeof item === 'string') {\n      return {\n        value: item,\n        label: item\n      };\n    }\n\n    if (typeof item === 'object') {\n      return item;\n    }\n  });\n}\nexport var shouldDisplay = function shouldDisplay(filterBy, value) {\n  return function (item) {\n    if (typeof filterBy === 'function') {\n      return filterBy(value, item);\n    }\n\n    if (!trim(value)) {\n      return false;\n    }\n\n    var keyword = (value || '').toLocaleLowerCase();\n    return (\"\" + item.label).toLocaleLowerCase().indexOf(keyword) >= 0;\n  };\n};","map":{"version":3,"sources":["/Users/supriyomal/Documents/GitHub/LeetQuestion/node_modules/rsuite/esm/AutoComplete/utils.js"],"names":["trim","transformData","data","map","item","value","label","shouldDisplay","filterBy","keyword","toLocaleLowerCase","indexOf"],"mappings":"AAAA,OAAOA,IAAP,MAAiB,aAAjB;AACA,OAAO,SAASC,aAAT,CAAuBC,IAAvB,EAA6B;AAClC,MAAI,CAACA,IAAL,EAAW;AACT,WAAO,EAAP;AACD;;AAED,SAAOA,IAAI,CAACC,GAAL,CAAS,UAAUC,IAAV,EAAgB;AAC9B,QAAI,OAAOA,IAAP,KAAgB,QAApB,EAA8B;AAC5B,aAAO;AACLC,QAAAA,KAAK,EAAED,IADF;AAELE,QAAAA,KAAK,EAAEF;AAFF,OAAP;AAID;;AAED,QAAI,OAAOA,IAAP,KAAgB,QAApB,EAA8B;AAC5B,aAAOA,IAAP;AACD;AACF,GAXM,CAAP;AAYD;AACD,OAAO,IAAIG,aAAa,GAAG,SAASA,aAAT,CAAuBC,QAAvB,EAAiCH,KAAjC,EAAwC;AACjE,SAAO,UAAUD,IAAV,EAAgB;AACrB,QAAI,OAAOI,QAAP,KAAoB,UAAxB,EAAoC;AAClC,aAAOA,QAAQ,CAACH,KAAD,EAAQD,IAAR,CAAf;AACD;;AAED,QAAI,CAACJ,IAAI,CAACK,KAAD,CAAT,EAAkB;AAChB,aAAO,KAAP;AACD;;AAED,QAAII,OAAO,GAAG,CAACJ,KAAK,IAAI,EAAV,EAAcK,iBAAd,EAAd;AACA,WAAO,CAAC,KAAKN,IAAI,CAACE,KAAX,EAAkBI,iBAAlB,GAAsCC,OAAtC,CAA8CF,OAA9C,KAA0D,CAAjE;AACD,GAXD;AAYD,CAbM","sourcesContent":["import trim from 'lodash/trim';\nexport function transformData(data) {\n  if (!data) {\n    return [];\n  }\n\n  return data.map(function (item) {\n    if (typeof item === 'string') {\n      return {\n        value: item,\n        label: item\n      };\n    }\n\n    if (typeof item === 'object') {\n      return item;\n    }\n  });\n}\nexport var shouldDisplay = function shouldDisplay(filterBy, value) {\n  return function (item) {\n    if (typeof filterBy === 'function') {\n      return filterBy(value, item);\n    }\n\n    if (!trim(value)) {\n      return false;\n    }\n\n    var keyword = (value || '').toLocaleLowerCase();\n    return (\"\" + item.label).toLocaleLowerCase().indexOf(keyword) >= 0;\n  };\n};"]},"metadata":{},"sourceType":"module"}