{"ast":null,"code":"import { checkRequired, createValidator, createValidatorAsync, isEmpty, formatErrorMessage } from './utils';\nimport locales from './locales';\nexport var MixedType = /*#__PURE__*/function () {\n  function MixedType(name) {\n    this.typeName = void 0;\n    this.required = false;\n    this.requiredMessage = '';\n    this.trim = false;\n    this.emptyAllowed = false;\n    this.rules = [];\n    this.priorityRules = [];\n    this.schemaSpec = void 0;\n    this.value = void 0;\n    this.locale = void 0;\n    this.typeName = name;\n    this.locale = Object.assign(name ? locales[name] : {}, locales.mixed);\n  }\n\n  var _proto = MixedType.prototype;\n\n  _proto.setSchemaOptions = function setSchemaOptions(schemaSpec, value) {\n    this.schemaSpec = schemaSpec;\n    this.value = value;\n  };\n\n  _proto.check = function check(value, data, fieldName) {\n    if (value === void 0) {\n      value = this.value;\n    }\n\n    if (this.required && !checkRequired(value, this.trim, this.emptyAllowed)) {\n      return {\n        hasError: true,\n        errorMessage: formatErrorMessage(this.requiredMessage, {\n          name: fieldName\n        })\n      };\n    }\n\n    var validator = createValidator(data, fieldName);\n    var checkStatus = validator(value, this.priorityRules);\n\n    if (checkStatus) {\n      return checkStatus;\n    }\n\n    if (!this.required && isEmpty(value)) {\n      return {\n        hasError: false\n      };\n    }\n\n    return validator(value, this.rules) || {\n      hasError: false\n    };\n  };\n\n  _proto.checkAsync = function checkAsync(value, data, fieldName) {\n    var _this = this;\n\n    if (value === void 0) {\n      value = this.value;\n    }\n\n    if (this.required && !checkRequired(value, this.trim, this.emptyAllowed)) {\n      return Promise.resolve({\n        hasError: true,\n        errorMessage: formatErrorMessage(this.requiredMessage, {\n          name: fieldName\n        })\n      });\n    }\n\n    var validator = createValidatorAsync(data, fieldName);\n    return new Promise(function (resolve) {\n      return validator(value, _this.priorityRules).then(function (checkStatus) {\n        if (checkStatus) {\n          resolve(checkStatus);\n        }\n      }).then(function () {\n        if (!_this.required && isEmpty(value)) {\n          resolve({\n            hasError: false\n          });\n        }\n      }).then(function () {\n        return validator(value, _this.rules);\n      }).then(function (checkStatus) {\n        if (checkStatus) {\n          resolve(checkStatus);\n        }\n\n        resolve({\n          hasError: false\n        });\n      });\n    });\n  };\n\n  _proto.pushRule = function pushRule(rule) {\n    var _this$rules, _this$rules$;\n\n    var onValid = rule.onValid,\n        errorMessage = rule.errorMessage,\n        priority = rule.priority,\n        params = rule.params;\n    var nextRule = {\n      onValid: onValid,\n      params: params,\n      errorMessage: errorMessage || ((_this$rules = this.rules) === null || _this$rules === void 0 ? void 0 : (_this$rules$ = _this$rules[0]) === null || _this$rules$ === void 0 ? void 0 : _this$rules$.errorMessage)\n    };\n\n    if (priority) {\n      this.priorityRules.push(nextRule);\n    } else {\n      this.rules.push(nextRule);\n    }\n  };\n\n  _proto.addRule = function addRule(onValid, errorMessage, priority) {\n    this.pushRule({\n      onValid: onValid,\n      errorMessage: errorMessage,\n      priority: priority\n    });\n    return this;\n  };\n\n  _proto.isRequired = function isRequired(errorMessage, trim) {\n    if (errorMessage === void 0) {\n      errorMessage = this.locale.isRequired;\n    }\n\n    if (trim === void 0) {\n      trim = true;\n    }\n\n    this.required = true;\n    this.trim = trim;\n    this.requiredMessage = errorMessage;\n    return this;\n  };\n\n  _proto.isRequiredOrEmpty = function isRequiredOrEmpty(errorMessage, trim) {\n    if (errorMessage === void 0) {\n      errorMessage = this.locale.isRequiredOrEmpty;\n    }\n\n    if (trim === void 0) {\n      trim = true;\n    }\n\n    this.required = true;\n    this.trim = trim;\n    this.emptyAllowed = true;\n    this.requiredMessage = errorMessage;\n    return this;\n  }\n  /**\n   * Define data verification rules based on conditions.\n   * @param validator\n   * @example\n   * MixedType().when(schema => {\n   *   return schema.filed1.check() ? NumberType().min(5) : NumberType().min(0);\n   * });\n   */\n  ;\n\n  _proto.when = function when(condition) {\n    var _this2 = this;\n\n    this.addRule(function (value, data, filedName) {\n      return condition(_this2.schemaSpec).check(value, data, filedName);\n    }, undefined, true);\n    return this;\n  };\n\n  return MixedType;\n}();\nexport default function getMixedType() {\n  return new MixedType();\n}","map":{"version":3,"sources":["/Users/supriyomal/Documents/GitHub/LeetQuestion/node_modules/schema-typed/es/MixedType.js"],"names":["checkRequired","createValidator","createValidatorAsync","isEmpty","formatErrorMessage","locales","MixedType","name","typeName","required","requiredMessage","trim","emptyAllowed","rules","priorityRules","schemaSpec","value","locale","Object","assign","mixed","_proto","prototype","setSchemaOptions","check","data","fieldName","hasError","errorMessage","validator","checkStatus","checkAsync","_this","Promise","resolve","then","pushRule","rule","_this$rules","_this$rules$","onValid","priority","params","nextRule","push","addRule","isRequired","isRequiredOrEmpty","when","condition","_this2","filedName","undefined","getMixedType"],"mappings":"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","sourcesContent":["import { checkRequired, createValidator, createValidatorAsync, isEmpty, formatErrorMessage } from './utils';\nimport locales from './locales';\nexport var MixedType = /*#__PURE__*/function () {\n  function MixedType(name) {\n    this.typeName = void 0;\n    this.required = false;\n    this.requiredMessage = '';\n    this.trim = false;\n    this.emptyAllowed = false;\n    this.rules = [];\n    this.priorityRules = [];\n    this.schemaSpec = void 0;\n    this.value = void 0;\n    this.locale = void 0;\n    this.typeName = name;\n    this.locale = Object.assign(name ? locales[name] : {}, locales.mixed);\n  }\n\n  var _proto = MixedType.prototype;\n\n  _proto.setSchemaOptions = function setSchemaOptions(schemaSpec, value) {\n    this.schemaSpec = schemaSpec;\n    this.value = value;\n  };\n\n  _proto.check = function check(value, data, fieldName) {\n    if (value === void 0) {\n      value = this.value;\n    }\n\n    if (this.required && !checkRequired(value, this.trim, this.emptyAllowed)) {\n      return {\n        hasError: true,\n        errorMessage: formatErrorMessage(this.requiredMessage, {\n          name: fieldName\n        })\n      };\n    }\n\n    var validator = createValidator(data, fieldName);\n    var checkStatus = validator(value, this.priorityRules);\n\n    if (checkStatus) {\n      return checkStatus;\n    }\n\n    if (!this.required && isEmpty(value)) {\n      return {\n        hasError: false\n      };\n    }\n\n    return validator(value, this.rules) || {\n      hasError: false\n    };\n  };\n\n  _proto.checkAsync = function checkAsync(value, data, fieldName) {\n    var _this = this;\n\n    if (value === void 0) {\n      value = this.value;\n    }\n\n    if (this.required && !checkRequired(value, this.trim, this.emptyAllowed)) {\n      return Promise.resolve({\n        hasError: true,\n        errorMessage: formatErrorMessage(this.requiredMessage, {\n          name: fieldName\n        })\n      });\n    }\n\n    var validator = createValidatorAsync(data, fieldName);\n    return new Promise(function (resolve) {\n      return validator(value, _this.priorityRules).then(function (checkStatus) {\n        if (checkStatus) {\n          resolve(checkStatus);\n        }\n      }).then(function () {\n        if (!_this.required && isEmpty(value)) {\n          resolve({\n            hasError: false\n          });\n        }\n      }).then(function () {\n        return validator(value, _this.rules);\n      }).then(function (checkStatus) {\n        if (checkStatus) {\n          resolve(checkStatus);\n        }\n\n        resolve({\n          hasError: false\n        });\n      });\n    });\n  };\n\n  _proto.pushRule = function pushRule(rule) {\n    var _this$rules, _this$rules$;\n\n    var onValid = rule.onValid,\n        errorMessage = rule.errorMessage,\n        priority = rule.priority,\n        params = rule.params;\n    var nextRule = {\n      onValid: onValid,\n      params: params,\n      errorMessage: errorMessage || ((_this$rules = this.rules) === null || _this$rules === void 0 ? void 0 : (_this$rules$ = _this$rules[0]) === null || _this$rules$ === void 0 ? void 0 : _this$rules$.errorMessage)\n    };\n\n    if (priority) {\n      this.priorityRules.push(nextRule);\n    } else {\n      this.rules.push(nextRule);\n    }\n  };\n\n  _proto.addRule = function addRule(onValid, errorMessage, priority) {\n    this.pushRule({\n      onValid: onValid,\n      errorMessage: errorMessage,\n      priority: priority\n    });\n    return this;\n  };\n\n  _proto.isRequired = function isRequired(errorMessage, trim) {\n    if (errorMessage === void 0) {\n      errorMessage = this.locale.isRequired;\n    }\n\n    if (trim === void 0) {\n      trim = true;\n    }\n\n    this.required = true;\n    this.trim = trim;\n    this.requiredMessage = errorMessage;\n    return this;\n  };\n\n  _proto.isRequiredOrEmpty = function isRequiredOrEmpty(errorMessage, trim) {\n    if (errorMessage === void 0) {\n      errorMessage = this.locale.isRequiredOrEmpty;\n    }\n\n    if (trim === void 0) {\n      trim = true;\n    }\n\n    this.required = true;\n    this.trim = trim;\n    this.emptyAllowed = true;\n    this.requiredMessage = errorMessage;\n    return this;\n  }\n  /**\n   * Define data verification rules based on conditions.\n   * @param validator\n   * @example\n   * MixedType().when(schema => {\n   *   return schema.filed1.check() ? NumberType().min(5) : NumberType().min(0);\n   * });\n   */\n  ;\n\n  _proto.when = function when(condition) {\n    var _this2 = this;\n\n    this.addRule(function (value, data, filedName) {\n      return condition(_this2.schemaSpec).check(value, data, filedName);\n    }, undefined, true);\n    return this;\n  };\n\n  return MixedType;\n}();\nexport default function getMixedType() {\n  return new MixedType();\n}"]},"metadata":{},"sourceType":"module"}