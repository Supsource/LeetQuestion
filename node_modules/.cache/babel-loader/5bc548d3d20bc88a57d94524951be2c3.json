{"ast":null,"code":"// Ref: https://github.com/thefrontside/deprecated-prop-type/blob/master/deprecated.js\nvar warned = {};\nexport default function deprecatePropType(propType, explanation) {\n  return function validate(props, propName, componentName) {\n    // Note ...rest here\n    if (props[propName] != null) {\n      var message = \"\\\"\" + propName + \"\\\" property of \\\"\" + componentName + \"\\\" has been deprecated.\\n\" + explanation;\n\n      if (!warned[message]) {\n        console.warn(message);\n        warned[message] = true;\n      }\n    }\n\n    for (var _len = arguments.length, rest = new Array(_len > 3 ? _len - 3 : 0), _key = 3; _key < _len; _key++) {\n      rest[_key - 3] = arguments[_key];\n    }\n\n    return propType.apply(void 0, [props, propName, componentName].concat(rest)); // and here\n  };\n}\n\nfunction _resetWarned() {\n  warned = {};\n}\n\ndeprecatePropType._resetWarned = _resetWarned;","map":{"version":3,"sources":["/Users/supriyomal/Documents/GitHub/LeetQuestion/node_modules/rsuite/esm/utils/deprecatePropType.js"],"names":["warned","deprecatePropType","propType","explanation","validate","props","propName","componentName","message","console","warn","_len","arguments","length","rest","Array","_key","apply","concat","_resetWarned"],"mappings":"AAAA;AACA,IAAIA,MAAM,GAAG,EAAb;AACA,eAAe,SAASC,iBAAT,CAA2BC,QAA3B,EAAqCC,WAArC,EAAkD;AAC/D,SAAO,SAASC,QAAT,CAAkBC,KAAlB,EAAyBC,QAAzB,EAAmCC,aAAnC,EAAkD;AACvD;AACA,QAAIF,KAAK,CAACC,QAAD,CAAL,IAAmB,IAAvB,EAA6B;AAC3B,UAAIE,OAAO,GAAG,OAAOF,QAAP,GAAkB,mBAAlB,GAAwCC,aAAxC,GAAwD,2BAAxD,GAAsFJ,WAApG;;AAEA,UAAI,CAACH,MAAM,CAACQ,OAAD,CAAX,EAAsB;AACpBC,QAAAA,OAAO,CAACC,IAAR,CAAaF,OAAb;AACAR,QAAAA,MAAM,CAACQ,OAAD,CAAN,GAAkB,IAAlB;AACD;AACF;;AAED,SAAK,IAAIG,IAAI,GAAGC,SAAS,CAACC,MAArB,EAA6BC,IAAI,GAAG,IAAIC,KAAJ,CAAUJ,IAAI,GAAG,CAAP,GAAWA,IAAI,GAAG,CAAlB,GAAsB,CAAhC,CAApC,EAAwEK,IAAI,GAAG,CAApF,EAAuFA,IAAI,GAAGL,IAA9F,EAAoGK,IAAI,EAAxG,EAA4G;AAC1GF,MAAAA,IAAI,CAACE,IAAI,GAAG,CAAR,CAAJ,GAAiBJ,SAAS,CAACI,IAAD,CAA1B;AACD;;AAED,WAAOd,QAAQ,CAACe,KAAT,CAAe,KAAK,CAApB,EAAuB,CAACZ,KAAD,EAAQC,QAAR,EAAkBC,aAAlB,EAAiCW,MAAjC,CAAwCJ,IAAxC,CAAvB,CAAP,CAfuD,CAeuB;AAC/E,GAhBD;AAiBD;;AAED,SAASK,YAAT,GAAwB;AACtBnB,EAAAA,MAAM,GAAG,EAAT;AACD;;AAEDC,iBAAiB,CAACkB,YAAlB,GAAiCA,YAAjC","sourcesContent":["// Ref: https://github.com/thefrontside/deprecated-prop-type/blob/master/deprecated.js\nvar warned = {};\nexport default function deprecatePropType(propType, explanation) {\n  return function validate(props, propName, componentName) {\n    // Note ...rest here\n    if (props[propName] != null) {\n      var message = \"\\\"\" + propName + \"\\\" property of \\\"\" + componentName + \"\\\" has been deprecated.\\n\" + explanation;\n\n      if (!warned[message]) {\n        console.warn(message);\n        warned[message] = true;\n      }\n    }\n\n    for (var _len = arguments.length, rest = new Array(_len > 3 ? _len - 3 : 0), _key = 3; _key < _len; _key++) {\n      rest[_key - 3] = arguments[_key];\n    }\n\n    return propType.apply(void 0, [props, propName, componentName].concat(rest)); // and here\n  };\n}\n\nfunction _resetWarned() {\n  warned = {};\n}\n\ndeprecatePropType._resetWarned = _resetWarned;"]},"metadata":{},"sourceType":"module"}