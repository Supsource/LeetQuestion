{"ast":null,"code":"import _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport { MixedType } from './MixedType';\nimport { createValidator, createValidatorAsync, checkRequired, isEmpty } from './utils';\nexport var ObjectType = /*#__PURE__*/function (_MixedType) {\n  _inheritsLoose(ObjectType, _MixedType);\n\n  function ObjectType(errorMessage) {\n    var _this;\n\n    _this = _MixedType.call(this, 'object') || this;\n    _this.objectTypeSchemaSpec = void 0;\n\n    _MixedType.prototype.pushRule.call(_assertThisInitialized(_this), {\n      onValid: function onValid(v) {\n        return typeof v === 'object';\n      },\n      errorMessage: errorMessage || _this.locale.type\n    });\n\n    return _this;\n  }\n\n  var _proto = ObjectType.prototype;\n\n  _proto.check = function check(value, data, fieldName) {\n    if (value === void 0) {\n      value = this.value;\n    }\n\n    var check = function check(value, data, type) {\n      if (type.required && !checkRequired(value, type.trim, type.emptyAllowed)) {\n        return {\n          hasError: true,\n          errorMessage: type.requiredMessage\n        };\n      }\n\n      if (type.objectTypeSchemaSpec && typeof value === 'object') {\n        var checkResultObject = {};\n        var hasError = false;\n        Object.entries(type.objectTypeSchemaSpec).forEach(function (_ref) {\n          var k = _ref[0],\n              v = _ref[1];\n          var checkResult = check(value[k], value, v);\n\n          if (checkResult !== null && checkResult !== void 0 && checkResult.hasError) {\n            hasError = true;\n          }\n\n          checkResultObject[k] = checkResult;\n        });\n        return {\n          hasError: hasError,\n          object: checkResultObject\n        };\n      }\n\n      var validator = createValidator(data, fieldName);\n      var checkStatus = validator(value, type.priorityRules);\n\n      if (checkStatus) {\n        return checkStatus;\n      }\n\n      if (!type.required && isEmpty(value)) {\n        return {\n          hasError: false\n        };\n      }\n\n      return validator(value, type.rules) || {\n        hasError: false\n      };\n    };\n\n    return check(value, data, this);\n  };\n\n  _proto.checkAsync = function checkAsync(value, data, fieldName) {\n    var _this2 = this;\n\n    if (value === void 0) {\n      value = this.value;\n    }\n\n    var check = function check(value, data, type) {\n      if (type.required && !checkRequired(value, type.trim, type.emptyAllowed)) {\n        return Promise.resolve({\n          hasError: true,\n          errorMessage: _this2.requiredMessage\n        });\n      }\n\n      var validator = createValidatorAsync(data, fieldName);\n      return new Promise(function (resolve) {\n        if (type.objectTypeSchemaSpec && typeof value === 'object') {\n          var checkResult = {};\n          var checkAll = [];\n          var keys = [];\n          Object.entries(type.objectTypeSchemaSpec).forEach(function (_ref2) {\n            var k = _ref2[0],\n                v = _ref2[1];\n            checkAll.push(check(value[k], value, v));\n            keys.push(k);\n          });\n          return Promise.all(checkAll).then(function (values) {\n            values.forEach(function (v, index) {\n              checkResult[keys[index]] = v;\n            });\n            resolve({\n              object: checkResult\n            });\n          });\n        }\n\n        return validator(value, type.priorityRules).then(function (checkStatus) {\n          if (checkStatus) {\n            resolve(checkStatus);\n          }\n        }).then(function () {\n          if (!type.required && isEmpty(value)) {\n            resolve({\n              hasError: false\n            });\n          }\n        }).then(function () {\n          return validator(value, type.rules);\n        }).then(function (checkStatus) {\n          if (checkStatus) {\n            resolve(checkStatus);\n          }\n\n          resolve({\n            hasError: false\n          });\n        });\n      });\n    };\n\n    return check(value, data, this);\n  }\n  /**\n   * @example\n   * ObjectType().shape({\n   *  name: StringType(),\n   *  age: NumberType()\n   * })\n   */\n  ;\n\n  _proto.shape = function shape(fields) {\n    this.objectTypeSchemaSpec = fields;\n    return this;\n  };\n\n  return ObjectType;\n}(MixedType);\nexport default function getObjectType(errorMessage) {\n  return new ObjectType(errorMessage);\n}","map":{"version":3,"sources":["/Users/supriyomal/Desktop/hekors-website-main/node_modules/schema-typed/es/ObjectType.js"],"names":["_assertThisInitialized","_inheritsLoose","MixedType","createValidator","createValidatorAsync","checkRequired","isEmpty","ObjectType","_MixedType","errorMessage","_this","call","objectTypeSchemaSpec","prototype","pushRule","onValid","v","locale","type","_proto","check","value","data","fieldName","required","trim","emptyAllowed","hasError","requiredMessage","checkResultObject","Object","entries","forEach","_ref","k","checkResult","object","validator","checkStatus","priorityRules","rules","checkAsync","_this2","Promise","resolve","checkAll","keys","_ref2","push","all","then","values","index","shape","fields","getObjectType"],"mappings":"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","sourcesContent":["import _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport { MixedType } from './MixedType';\nimport { createValidator, createValidatorAsync, checkRequired, isEmpty } from './utils';\nexport var ObjectType = /*#__PURE__*/function (_MixedType) {\n  _inheritsLoose(ObjectType, _MixedType);\n\n  function ObjectType(errorMessage) {\n    var _this;\n\n    _this = _MixedType.call(this, 'object') || this;\n    _this.objectTypeSchemaSpec = void 0;\n\n    _MixedType.prototype.pushRule.call(_assertThisInitialized(_this), {\n      onValid: function onValid(v) {\n        return typeof v === 'object';\n      },\n      errorMessage: errorMessage || _this.locale.type\n    });\n\n    return _this;\n  }\n\n  var _proto = ObjectType.prototype;\n\n  _proto.check = function check(value, data, fieldName) {\n    if (value === void 0) {\n      value = this.value;\n    }\n\n    var check = function check(value, data, type) {\n      if (type.required && !checkRequired(value, type.trim, type.emptyAllowed)) {\n        return {\n          hasError: true,\n          errorMessage: type.requiredMessage\n        };\n      }\n\n      if (type.objectTypeSchemaSpec && typeof value === 'object') {\n        var checkResultObject = {};\n        var hasError = false;\n        Object.entries(type.objectTypeSchemaSpec).forEach(function (_ref) {\n          var k = _ref[0],\n              v = _ref[1];\n          var checkResult = check(value[k], value, v);\n\n          if (checkResult !== null && checkResult !== void 0 && checkResult.hasError) {\n            hasError = true;\n          }\n\n          checkResultObject[k] = checkResult;\n        });\n        return {\n          hasError: hasError,\n          object: checkResultObject\n        };\n      }\n\n      var validator = createValidator(data, fieldName);\n      var checkStatus = validator(value, type.priorityRules);\n\n      if (checkStatus) {\n        return checkStatus;\n      }\n\n      if (!type.required && isEmpty(value)) {\n        return {\n          hasError: false\n        };\n      }\n\n      return validator(value, type.rules) || {\n        hasError: false\n      };\n    };\n\n    return check(value, data, this);\n  };\n\n  _proto.checkAsync = function checkAsync(value, data, fieldName) {\n    var _this2 = this;\n\n    if (value === void 0) {\n      value = this.value;\n    }\n\n    var check = function check(value, data, type) {\n      if (type.required && !checkRequired(value, type.trim, type.emptyAllowed)) {\n        return Promise.resolve({\n          hasError: true,\n          errorMessage: _this2.requiredMessage\n        });\n      }\n\n      var validator = createValidatorAsync(data, fieldName);\n      return new Promise(function (resolve) {\n        if (type.objectTypeSchemaSpec && typeof value === 'object') {\n          var checkResult = {};\n          var checkAll = [];\n          var keys = [];\n          Object.entries(type.objectTypeSchemaSpec).forEach(function (_ref2) {\n            var k = _ref2[0],\n                v = _ref2[1];\n            checkAll.push(check(value[k], value, v));\n            keys.push(k);\n          });\n          return Promise.all(checkAll).then(function (values) {\n            values.forEach(function (v, index) {\n              checkResult[keys[index]] = v;\n            });\n            resolve({\n              object: checkResult\n            });\n          });\n        }\n\n        return validator(value, type.priorityRules).then(function (checkStatus) {\n          if (checkStatus) {\n            resolve(checkStatus);\n          }\n        }).then(function () {\n          if (!type.required && isEmpty(value)) {\n            resolve({\n              hasError: false\n            });\n          }\n        }).then(function () {\n          return validator(value, type.rules);\n        }).then(function (checkStatus) {\n          if (checkStatus) {\n            resolve(checkStatus);\n          }\n\n          resolve({\n            hasError: false\n          });\n        });\n      });\n    };\n\n    return check(value, data, this);\n  }\n  /**\n   * @example\n   * ObjectType().shape({\n   *  name: StringType(),\n   *  age: NumberType()\n   * })\n   */\n  ;\n\n  _proto.shape = function shape(fields) {\n    this.objectTypeSchemaSpec = fields;\n    return this;\n  };\n\n  return ObjectType;\n}(MixedType);\nexport default function getObjectType(errorMessage) {\n  return new ObjectType(errorMessage);\n}"]},"metadata":{},"sourceType":"module"}