{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport formatErrorMessage from './formatErrorMessage';\n/**\n * Create a data validator\n * @param data\n */\n\nexport function createValidator(data, name) {\n  return function (value, rules) {\n    for (var i = 0; i < rules.length; i += 1) {\n      var _rules$i = rules[i],\n          onValid = _rules$i.onValid,\n          errorMessage = _rules$i.errorMessage,\n          params = _rules$i.params;\n      var checkResult = onValid(value, data, name);\n\n      if (checkResult === false) {\n        return {\n          hasError: true,\n          errorMessage: formatErrorMessage(errorMessage, _extends({}, params, {\n            name: Array.isArray(name) ? name.join('.') : name\n          }))\n        };\n      } else if (typeof checkResult === 'object' && (checkResult.hasError || checkResult.array)) {\n        return checkResult;\n      }\n    }\n\n    return null;\n  };\n}\nexport default createValidator;","map":{"version":3,"sources":["/Users/supriyomal/Documents/GitHub/LeetQuestion/node_modules/schema-typed/es/utils/createValidator.js"],"names":["_extends","formatErrorMessage","createValidator","data","name","value","rules","i","length","_rules$i","onValid","errorMessage","params","checkResult","hasError","Array","isArray","join","array"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,oCAArB;AACA,OAAOC,kBAAP,MAA+B,sBAA/B;AACA;AACA;AACA;AACA;;AAEA,OAAO,SAASC,eAAT,CAAyBC,IAAzB,EAA+BC,IAA/B,EAAqC;AAC1C,SAAO,UAAUC,KAAV,EAAiBC,KAAjB,EAAwB;AAC7B,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,KAAK,CAACE,MAA1B,EAAkCD,CAAC,IAAI,CAAvC,EAA0C;AACxC,UAAIE,QAAQ,GAAGH,KAAK,CAACC,CAAD,CAApB;AAAA,UACIG,OAAO,GAAGD,QAAQ,CAACC,OADvB;AAAA,UAEIC,YAAY,GAAGF,QAAQ,CAACE,YAF5B;AAAA,UAGIC,MAAM,GAAGH,QAAQ,CAACG,MAHtB;AAIA,UAAIC,WAAW,GAAGH,OAAO,CAACL,KAAD,EAAQF,IAAR,EAAcC,IAAd,CAAzB;;AAEA,UAAIS,WAAW,KAAK,KAApB,EAA2B;AACzB,eAAO;AACLC,UAAAA,QAAQ,EAAE,IADL;AAELH,UAAAA,YAAY,EAAEV,kBAAkB,CAACU,YAAD,EAAeX,QAAQ,CAAC,EAAD,EAAKY,MAAL,EAAa;AAClER,YAAAA,IAAI,EAAEW,KAAK,CAACC,OAAN,CAAcZ,IAAd,IAAsBA,IAAI,CAACa,IAAL,CAAU,GAAV,CAAtB,GAAuCb;AADqB,WAAb,CAAvB;AAF3B,SAAP;AAMD,OAPD,MAOO,IAAI,OAAOS,WAAP,KAAuB,QAAvB,KAAoCA,WAAW,CAACC,QAAZ,IAAwBD,WAAW,CAACK,KAAxE,CAAJ,EAAoF;AACzF,eAAOL,WAAP;AACD;AACF;;AAED,WAAO,IAAP;AACD,GArBD;AAsBD;AACD,eAAeX,eAAf","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport formatErrorMessage from './formatErrorMessage';\n/**\n * Create a data validator\n * @param data\n */\n\nexport function createValidator(data, name) {\n  return function (value, rules) {\n    for (var i = 0; i < rules.length; i += 1) {\n      var _rules$i = rules[i],\n          onValid = _rules$i.onValid,\n          errorMessage = _rules$i.errorMessage,\n          params = _rules$i.params;\n      var checkResult = onValid(value, data, name);\n\n      if (checkResult === false) {\n        return {\n          hasError: true,\n          errorMessage: formatErrorMessage(errorMessage, _extends({}, params, {\n            name: Array.isArray(name) ? name.join('.') : name\n          }))\n        };\n      } else if (typeof checkResult === 'object' && (checkResult.hasError || checkResult.array)) {\n        return checkResult;\n      }\n    }\n\n    return null;\n  };\n}\nexport default createValidator;"]},"metadata":{},"sourceType":"module"}