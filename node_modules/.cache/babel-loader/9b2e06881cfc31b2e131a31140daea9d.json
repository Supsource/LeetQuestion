{"ast":null,"code":"import PropTypes from 'prop-types';\nexport function tupleType() {\n  for (var _len = arguments.length, typeCheckers = new Array(_len), _key = 0; _key < _len; _key++) {\n    typeCheckers[_key] = arguments[_key];\n  }\n\n  return PropTypes.arrayOf(function (value, index) {\n    var _typeCheckers$index;\n\n    for (var _len2 = arguments.length, rest = new Array(_len2 > 2 ? _len2 - 2 : 0), _key2 = 2; _key2 < _len2; _key2++) {\n      rest[_key2 - 2] = arguments[_key2];\n    }\n\n    return (_typeCheckers$index = typeCheckers[index]).call.apply(_typeCheckers$index, [PropTypes, value, index].concat(rest));\n  });\n}\nexport var refType = PropTypes.oneOfType([PropTypes.func, PropTypes.any]);","map":{"version":3,"sources":["/Users/supriyomal/Desktop/hekors-website-main/node_modules/rsuite/esm/utils/propTypeChecker.js"],"names":["PropTypes","tupleType","_len","arguments","length","typeCheckers","Array","_key","arrayOf","value","index","_typeCheckers$index","_len2","rest","_key2","call","apply","concat","refType","oneOfType","func","any"],"mappings":"AAAA,OAAOA,SAAP,MAAsB,YAAtB;AACA,OAAO,SAASC,SAAT,GAAqB;AAC1B,OAAK,IAAIC,IAAI,GAAGC,SAAS,CAACC,MAArB,EAA6BC,YAAY,GAAG,IAAIC,KAAJ,CAAUJ,IAAV,CAA5C,EAA6DK,IAAI,GAAG,CAAzE,EAA4EA,IAAI,GAAGL,IAAnF,EAAyFK,IAAI,EAA7F,EAAiG;AAC/FF,IAAAA,YAAY,CAACE,IAAD,CAAZ,GAAqBJ,SAAS,CAACI,IAAD,CAA9B;AACD;;AAED,SAAOP,SAAS,CAACQ,OAAV,CAAkB,UAAUC,KAAV,EAAiBC,KAAjB,EAAwB;AAC/C,QAAIC,mBAAJ;;AAEA,SAAK,IAAIC,KAAK,GAAGT,SAAS,CAACC,MAAtB,EAA8BS,IAAI,GAAG,IAAIP,KAAJ,CAAUM,KAAK,GAAG,CAAR,GAAYA,KAAK,GAAG,CAApB,GAAwB,CAAlC,CAArC,EAA2EE,KAAK,GAAG,CAAxF,EAA2FA,KAAK,GAAGF,KAAnG,EAA0GE,KAAK,EAA/G,EAAmH;AACjHD,MAAAA,IAAI,CAACC,KAAK,GAAG,CAAT,CAAJ,GAAkBX,SAAS,CAACW,KAAD,CAA3B;AACD;;AAED,WAAO,CAACH,mBAAmB,GAAGN,YAAY,CAACK,KAAD,CAAnC,EAA4CK,IAA5C,CAAiDC,KAAjD,CAAuDL,mBAAvD,EAA4E,CAACX,SAAD,EAAYS,KAAZ,EAAmBC,KAAnB,EAA0BO,MAA1B,CAAiCJ,IAAjC,CAA5E,CAAP;AACD,GARM,CAAP;AASD;AACD,OAAO,IAAIK,OAAO,GAAGlB,SAAS,CAACmB,SAAV,CAAoB,CAACnB,SAAS,CAACoB,IAAX,EAAiBpB,SAAS,CAACqB,GAA3B,CAApB,CAAd","sourcesContent":["import PropTypes from 'prop-types';\nexport function tupleType() {\n  for (var _len = arguments.length, typeCheckers = new Array(_len), _key = 0; _key < _len; _key++) {\n    typeCheckers[_key] = arguments[_key];\n  }\n\n  return PropTypes.arrayOf(function (value, index) {\n    var _typeCheckers$index;\n\n    for (var _len2 = arguments.length, rest = new Array(_len2 > 2 ? _len2 - 2 : 0), _key2 = 2; _key2 < _len2; _key2++) {\n      rest[_key2 - 2] = arguments[_key2];\n    }\n\n    return (_typeCheckers$index = typeCheckers[index]).call.apply(_typeCheckers$index, [PropTypes, value, index].concat(rest));\n  });\n}\nexport var refType = PropTypes.oneOfType([PropTypes.func, PropTypes.any]);"]},"metadata":{},"sourceType":"module"}