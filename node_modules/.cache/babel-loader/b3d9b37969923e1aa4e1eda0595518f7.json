{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport IconCalendar from '@rsuite/icons/legacy/Calendar';\nimport isNil from 'lodash/isNil';\nimport omit from 'lodash/omit';\nimport partial from 'lodash/partial';\nimport pick from 'lodash/pick';\nimport PropTypes from 'prop-types';\nimport React, { useCallback, useEffect, useRef, useState } from 'react';\nimport { FormattedDate } from '../CustomProvider';\nimport Toolbar from '../DatePicker/Toolbar';\nimport { omitTriggerPropKeys, PickerOverlay, pickerPropTypes, PickerToggle, PickerToggleTrigger, pickTriggerPropKeys, usePickerClassName, usePublicMethods, useToggleKeyDownEvent } from '../Picker';\nimport { createChainedFunction, DATERANGE_DISABLED_TARGET, DateUtils, mergeRefs, useClassNames, useControlled, useCustom } from '../utils';\nimport { addMonths, compareAsc, isSameMonth } from '../utils/dateUtils';\nimport Calendar from './Calendar';\nimport * as disabledDateUtils from './disabledDateUtils';\nimport { getCalendarDate, getMonthHoverRange, getWeekHoverRange, isSameRange, setTimingMargin } from './utils';\nvar DateRangePicker = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var _ref, _ref2, _merge;\n\n  var _props$as = props.as,\n      Component = _props$as === void 0 ? 'div' : _props$as,\n      _props$classPrefix = props.classPrefix,\n      classPrefix = _props$classPrefix === void 0 ? 'picker' : _props$classPrefix,\n      className = props.className,\n      _props$appearance = props.appearance,\n      appearance = _props$appearance === void 0 ? 'default' : _props$appearance,\n      _props$cleanable = props.cleanable,\n      cleanable = _props$cleanable === void 0 ? true : _props$cleanable,\n      _props$character = props.character,\n      character = _props$character === void 0 ? ' ~ ' : _props$character,\n      defaultCalendarValue = props.defaultCalendarValue,\n      defaultValue = props.defaultValue,\n      disabled = props.disabled,\n      disabledDateProp = props.disabledDate,\n      _props$format = props.format,\n      formatStr = _props$format === void 0 ? 'yyyy-MM-dd' : _props$format,\n      hoverRange = props.hoverRange,\n      _props$isoWeek = props.isoWeek,\n      isoWeek = _props$isoWeek === void 0 ? false : _props$isoWeek,\n      _props$limitEndYear = props.limitEndYear,\n      limitEndYear = _props$limitEndYear === void 0 ? 1000 : _props$limitEndYear,\n      overrideLocale = props.locale,\n      menuClassName = props.menuClassName,\n      menuStyle = props.menuStyle,\n      oneTap = props.oneTap,\n      _props$placeholder = props.placeholder,\n      placeholder = _props$placeholder === void 0 ? '' : _props$placeholder,\n      _props$placement = props.placement,\n      placement = _props$placement === void 0 ? 'bottomStart' : _props$placement,\n      ranges = props.ranges,\n      renderValue = props.renderValue,\n      _props$showOneCalenda = props.showOneCalendar,\n      showOneCalendar = _props$showOneCalenda === void 0 ? false : _props$showOneCalenda,\n      showWeekNumbers = props.showWeekNumbers,\n      showMeridian = props.showMeridian,\n      style = props.style,\n      toggleAs = props.toggleAs,\n      valueProp = props.value,\n      onChange = props.onChange,\n      onClean = props.onClean,\n      onClose = props.onClose,\n      onEnter = props.onEnter,\n      onEntered = props.onEntered,\n      onExited = props.onExited,\n      onOk = props.onOk,\n      onOpen = props.onOpen,\n      onSelect = props.onSelect,\n      rest = _objectWithoutPropertiesLoose(props, [\"as\", \"classPrefix\", \"className\", \"appearance\", \"cleanable\", \"character\", \"defaultCalendarValue\", \"defaultValue\", \"disabled\", \"disabledDate\", \"format\", \"hoverRange\", \"isoWeek\", \"limitEndYear\", \"locale\", \"menuClassName\", \"menuStyle\", \"oneTap\", \"placeholder\", \"placement\", \"ranges\", \"renderValue\", \"showOneCalendar\", \"showWeekNumbers\", \"showMeridian\", \"style\", \"toggleAs\", \"value\", \"onChange\", \"onClean\", \"onClose\", \"onEnter\", \"onEntered\", \"onExited\", \"onOk\", \"onOpen\", \"onSelect\"]);\n\n  var _useClassNames = useClassNames(classPrefix),\n      merge = _useClassNames.merge,\n      prefix = _useClassNames.prefix;\n\n  var _useCustom = useCustom('DateRangePicker', overrideLocale),\n      locale = _useCustom.locale,\n      formatDate = _useCustom.formatDate,\n      parseDate = _useCustom.parseDate;\n\n  var rangeFormatStr = \"\" + formatStr + character + formatStr;\n\n  var _useControlled = useControlled(valueProp, defaultValue !== null && defaultValue !== void 0 ? defaultValue : null),\n      value = _useControlled[0],\n      setValue = _useControlled[1];\n  /**\n   * Whether to complete the selection.\n   * Everytime selection will change this value. If the value is false, it means that the selection has not been completed.\n   *\n   * In `oneTap` mode, select action will not change this value, its value should be true always.\n   */\n\n\n  var hasDoneSelect = useRef(true);\n  /**\n   * The currently selected date range.\n   *\n   * The time range is selected by two clicks. After the first click,\n   * the cursor will store a temporary event date in the process until\n   * the second click to determine the end date of the date range.\n   *\n   */\n\n  var _useState = useState((_ref = valueProp !== null && valueProp !== void 0 ? valueProp : defaultValue) !== null && _ref !== void 0 ? _ref : []),\n      selectedDates = _useState[0],\n      setSelectedDates = _useState[1]; // The date of the current hover, used to reduce the calculation of `handleMouseMove`\n\n\n  var _useState2 = useState(null),\n      hoverDateRange = _useState2[0],\n      setHoverDateRange = _useState2[1]; // The displayed calendar panel is rendered based on this value.\n\n\n  var _useState3 = useState(getCalendarDate({\n    value: (_ref2 = valueProp !== null && valueProp !== void 0 ? valueProp : defaultCalendarValue) !== null && _ref2 !== void 0 ? _ref2 : null\n  })),\n      calendarDate = _useState3[0],\n      setCalendarDate = _useState3[1];\n\n  var _useState4 = useState(),\n      inputState = _useState4[0],\n      setInputState = _useState4[1];\n  /**\n   * When hoverRange is set, `selectValue` will be updated during the hover process,\n   * which will cause the `selectValue` to be updated after the first click,\n   * so declare a Ref to temporarily store the `selectValue` of the first click.\n   */\n\n\n  var selectRangeValueRef = useRef(null);\n  /**\n   * Call this function to update the calendar panel rendering benchmark value.\n   * If params `value` is not passed, it defaults to [new Date(), addMonth(new Date(), 1)].\n   */\n\n  var updateCalendarDate = useCallback(function (value) {\n    setCalendarDate(getCalendarDate({\n      value: value\n    }));\n  }, []); // if valueProp changed then update selectValue/hoverValue\n\n  useEffect(function () {\n    setSelectedDates(valueProp !== null && valueProp !== void 0 ? valueProp : []);\n    setHoverDateRange(valueProp !== null && valueProp !== void 0 ? valueProp : null);\n  }, [valueProp]);\n\n  var _useState5 = useState(false),\n      isPickerToggleActive = _useState5[0],\n      setPickerToggleActive = _useState5[1];\n\n  var rootRef = useRef(null);\n  var overlayRef = useRef(null);\n  var targetRef = useRef(null);\n  var triggerRef = useRef(null);\n  var handleCloseDropdown = useCallback(function () {\n    var _triggerRef$current, _triggerRef$current$c;\n\n    (_triggerRef$current = triggerRef.current) === null || _triggerRef$current === void 0 ? void 0 : (_triggerRef$current$c = _triggerRef$current.close) === null || _triggerRef$current$c === void 0 ? void 0 : _triggerRef$current$c.call(_triggerRef$current);\n  }, []);\n  usePublicMethods(ref, {\n    triggerRef: triggerRef,\n    overlayRef: overlayRef,\n    targetRef: targetRef,\n    rootRef: rootRef\n  });\n  var getDisplayString = useCallback(function (nextValue, isPlaintext) {\n    var _nextValue$, _nextValue$2;\n\n    var startDate = (_nextValue$ = nextValue === null || nextValue === void 0 ? void 0 : nextValue[0]) !== null && _nextValue$ !== void 0 ? _nextValue$ : null;\n    var endDate = (_nextValue$2 = nextValue === null || nextValue === void 0 ? void 0 : nextValue[1]) !== null && _nextValue$2 !== void 0 ? _nextValue$2 : null;\n\n    if (startDate && endDate) {\n      var displayValue = [startDate, endDate].sort(compareAsc);\n\n      if (isPlaintext) {\n        return formatDate(displayValue[0], formatStr) + character + formatDate(displayValue[1], formatStr);\n      }\n\n      return renderValue ? renderValue(displayValue, formatStr) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(FormattedDate, {\n        date: displayValue[0],\n        formatStr: formatStr\n      }), character, /*#__PURE__*/React.createElement(FormattedDate, {\n        date: displayValue[1],\n        formatStr: formatStr\n      }));\n    }\n\n    return isPlaintext ? '' : placeholder || rangeFormatStr;\n  }, [character, formatDate, formatStr, placeholder, rangeFormatStr, renderValue]);\n  /**\n   * preset hover range\n   */\n\n  var getHoverRangeValue = useCallback(function (date) {\n    function getHoverRangeFunc() {\n      if (hoverRange === 'week') {\n        return partial(getWeekHoverRange, isoWeek);\n      } else if (hoverRange === 'month') {\n        return getMonthHoverRange;\n      }\n\n      return hoverRange;\n    }\n\n    var hoverRangeFunc = getHoverRangeFunc();\n\n    if (isNil(hoverRangeFunc)) {\n      return null;\n    }\n\n    var hoverValues = hoverRangeFunc(date);\n    var isHoverRangeValid = hoverValues instanceof Array && hoverValues.length === 2;\n\n    if (!isHoverRangeValid) {\n      return null;\n    }\n\n    if (DateUtils.isAfter(hoverValues[0], hoverValues[1])) {\n      hoverValues.reverse();\n    }\n\n    return hoverValues;\n  }, [hoverRange, isoWeek]);\n  var handleValueUpdate = useCallback(function (event, nextValue, closeOverlay) {\n    if (closeOverlay === void 0) {\n      closeOverlay = true;\n    } // If nextValue is null, it means that the user is erasing the selected dates.\n\n\n    setSelectedDates(nextValue !== null && nextValue !== void 0 ? nextValue : []);\n\n    if (!isSameRange(nextValue, value, formatStr)) {\n      setValue(nextValue);\n      onChange === null || onChange === void 0 ? void 0 : onChange(nextValue, event);\n    } // `closeOverlay` default value is `true`\n\n\n    if (closeOverlay !== false) {\n      handleCloseDropdown();\n    }\n  }, [formatStr, handleCloseDropdown, onChange, setValue, value]);\n  /**\n   * Select the date range. If oneTap is not set, you need to click twice to select the start time and end time.\n   * The MouseMove event is called between the first click and the second click to update the selection state.\n   */\n\n  var handleMouseMove = useCallback(function (date) {\n    var nextHoverDateRange = getHoverRangeValue(date); // If hasDoneSelect is false,\n    // it means there's already one selected date\n    // and waiting for user to select the second date to complete the selection.\n\n    if (!hasDoneSelect.current) {\n      // If `hoverRange` is set, you need to change the value of hoverDateRange according to the rules\n      if (!isNil(nextHoverDateRange) && !isNil(selectRangeValueRef.current)) {\n        var nextSelectedDates = [selectRangeValueRef.current[0], nextHoverDateRange[1]];\n\n        if (DateUtils.isBefore(nextHoverDateRange[0], selectRangeValueRef.current[0])) {\n          nextSelectedDates = [nextHoverDateRange[0], selectRangeValueRef.current[1]];\n        }\n\n        setSelectedDates(nextSelectedDates);\n      } else {\n        setHoverDateRange(function (prevHoverValue) {\n          return isNil(prevHoverValue) ? null : [prevHoverValue[0], date];\n        });\n      } // Before the first click, if nextHoverDateRange has a value, hoverDateRange needs to be updated\n\n    } else if (!isNil(nextHoverDateRange)) {\n      setHoverDateRange(nextHoverDateRange);\n    }\n  }, [getHoverRangeValue]);\n  /**\n   * Callback for selecting a date cell in the calendar grid\n   */\n\n  var handleSelectDate = useCallback(function (date, event) {\n    var nextSelectDates = hoverDateRange !== null && hoverDateRange !== void 0 ? hoverDateRange : [];\n    var hoverRangeValue = getHoverRangeValue(date);\n    var noHoverRangeValid = isNil(hoverRangeValue); // in `oneTap` mode\n\n    if (hasDoneSelect.current && oneTap) {\n      handleValueUpdate(event, noHoverRangeValid ? [setTimingMargin(date), setTimingMargin(date, 'right')] : hoverRangeValue);\n      hasDoneSelect.current = false;\n      return;\n    } // no preset hover range can use\n\n\n    if (noHoverRangeValid) {\n      // start select\n      if (hasDoneSelect.current) {\n        nextSelectDates = [date];\n      } else {\n        // finish select\n        nextSelectDates[1] = date;\n      }\n    } else {\n      if (!hasDoneSelect.current) {\n        nextSelectDates = selectedDates;\n        selectRangeValueRef.current = null;\n      } else {\n        nextSelectDates = hoverRangeValue;\n        selectRangeValueRef.current = hoverRangeValue;\n      }\n    } // If user have completed the selection, then sort\n\n\n    if (nextSelectDates.length === 2 && DateUtils.isAfter(nextSelectDates[0], nextSelectDates[1])) {\n      nextSelectDates.reverse();\n    }\n\n    setHoverDateRange(nextSelectDates.length === 2 ? nextSelectDates : [nextSelectDates[0], nextSelectDates[0]]);\n    setSelectedDates(nextSelectDates);\n    updateCalendarDate(nextSelectDates);\n    onSelect === null || onSelect === void 0 ? void 0 : onSelect(date, event);\n    hasDoneSelect.current = !hasDoneSelect.current;\n  }, [getHoverRangeValue, handleValueUpdate, hoverDateRange, onSelect, oneTap, selectedDates, updateCalendarDate]);\n  /**\n   * If `selectValue` changed, there will be the following effects.\n   * 1. Check if the selection is completed.\n   * 2. if the selection is completed, set the temporary `hoverValue` empty.\n   */\n\n  useEffect(function () {\n    var selectValueLength = selectedDates.length;\n    var doneSelected = selectValueLength === 0 || selectValueLength === 2;\n    doneSelected && setHoverDateRange(null);\n  }, [selectedDates]);\n  var handleChangeCalendarDate = useCallback(function (index, date) {\n    var nextCalendarDate = Array.from(calendarDate);\n    nextCalendarDate[index] = date;\n    updateCalendarDate(nextCalendarDate);\n  }, [calendarDate, updateCalendarDate]);\n  var handleChangeCalendarTime = useCallback(function (index, date) {\n    setSelectedDates(function (prev) {\n      var next = [].concat(prev);\n      var clonedDate = new Date(date.valueOf()); // if next[index] is not empty, only update the time after aligning the year, month and day\n\n      if (next[index]) {\n        clonedDate.setFullYear(next[index].getFullYear(), next[index].getMonth(), next[index].getDate());\n      }\n\n      next[index] = clonedDate;\n      return next;\n    });\n    handleChangeCalendarDate(index, date);\n  }, [handleChangeCalendarDate]);\n  /**\n   * The callback triggered when PM/AM is switched.\n   */\n\n  var handleToggleMeridian = useCallback(function (index) {\n    var next = Array.from(calendarDate);\n    var clonedDate = new Date(next[index].valueOf());\n    var hours = DateUtils.getHours(clonedDate);\n    var nextHours = hours >= 12 ? hours - 12 : hours + 12;\n    next[index] = DateUtils.setHours(clonedDate, nextHours);\n    setCalendarDate(next); // If the value already exists, update the value again.\n\n    if (selectedDates.length === 2) {\n      setSelectedDates(next);\n    }\n  }, [calendarDate, selectedDates]);\n  /**\n   * Toolbar operation callback function\n   */\n\n  var handleShortcutPageDate = useCallback(function (value, closeOverlay, event) {\n    if (closeOverlay === void 0) {\n      closeOverlay = false;\n    }\n\n    handleValueUpdate(event, value, closeOverlay);\n  }, [handleValueUpdate]);\n  var handleOK = useCallback(function (event) {\n    handleValueUpdate(event, selectedDates);\n    onOk === null || onOk === void 0 ? void 0 : onOk(selectedDates, event);\n  }, [handleValueUpdate, onOk, selectedDates]);\n  var handleClean = useCallback(function (event) {\n    updateCalendarDate(null);\n    handleValueUpdate(event, null);\n  }, [handleValueUpdate, updateCalendarDate]);\n  /**\n   * Callback after the input box value is changed.\n   */\n\n  var handleInputChange = useCallback(function (value) {\n    setInputState('Typing');\n    var rangeValue = value.split(character); // isMatch('01/11/2020', 'MM/dd/yyyy') ==> true\n    // isMatch('2020-11-01', 'MM/dd/yyyy') ==> false\n\n    if (!DateUtils.isMatch(rangeValue[0], formatStr, {\n      locale: locale.dateLocale\n    }) || !DateUtils.isMatch(rangeValue[1], formatStr, {\n      locale: locale.dateLocale\n    })) {\n      setInputState('Error');\n      return;\n    }\n\n    var startDate = parseDate(rangeValue[0], formatStr);\n    var endDate = parseDate(rangeValue[1], formatStr);\n    var selectValue = [startDate, endDate];\n\n    if (!DateUtils.isValid(startDate) || !DateUtils.isValid(endDate)) {\n      setInputState('Error');\n      return;\n    }\n\n    if (isDateDisabled(startDate, selectValue, true, DATERANGE_DISABLED_TARGET.CALENDAR)) {\n      setInputState('Error');\n      return;\n    }\n\n    setHoverDateRange(selectValue);\n    setSelectedDates(selectValue);\n    updateCalendarDate(selectValue);\n  }, // eslint-disable-next-line react-hooks/exhaustive-deps\n  [character, rangeFormatStr, updateCalendarDate]);\n  /**\n   * The callback after the enter key is triggered on the input\n   */\n\n  var handleInputPressEnd = useCallback(function (event) {\n    if (inputState === 'Typing') {\n      handleValueUpdate(event, selectedDates.length === 2 ? selectedDates : null);\n    }\n\n    setInputState('Initial');\n  }, [handleValueUpdate, selectedDates, inputState]);\n  var handleEnter = useCallback(function () {\n    var nextCalendarDate;\n\n    if (value && value.length) {\n      var _startDate = value[0],\n          endData = value[1];\n      nextCalendarDate = [_startDate, isSameMonth(_startDate, endData) ? addMonths(endData, 1) : endData];\n    } else {\n      nextCalendarDate = getCalendarDate({\n        value: defaultCalendarValue !== null && defaultCalendarValue !== void 0 ? defaultCalendarValue : null\n      });\n    }\n\n    setSelectedDates(value !== null && value !== void 0 ? value : []);\n    updateCalendarDate(nextCalendarDate);\n  }, [defaultCalendarValue, updateCalendarDate, setSelectedDates, value]);\n  var handleEntered = useCallback(function () {\n    onOpen === null || onOpen === void 0 ? void 0 : onOpen();\n    setPickerToggleActive(true);\n  }, [onOpen]);\n  var handleExited = useCallback(function () {\n    setPickerToggleActive(false);\n    hasDoneSelect.current = true;\n    onClose === null || onClose === void 0 ? void 0 : onClose();\n  }, [onClose]);\n  var isDateDisabled = useCallback(function (date, selectDate, selectedDone, target) {\n    var _disabledDateProp;\n\n    return (_disabledDateProp = disabledDateProp === null || disabledDateProp === void 0 ? void 0 : disabledDateProp(date, selectDate, selectedDone, target)) !== null && _disabledDateProp !== void 0 ? _disabledDateProp : false;\n  }, [disabledDateProp]);\n  var disabledByBetween = useCallback(function (start, end, type) {\n    // If the date is between the start and the end\n    // the button is disabled\n    while (DateUtils.isBefore(start, end) || DateUtils.isSameDay(start, end)) {\n      if (isDateDisabled(start, selectedDates, hasDoneSelect.current, type)) {\n        return true;\n      }\n\n      start = DateUtils.addDays(start, 1);\n    }\n\n    return false;\n  }, [isDateDisabled, selectedDates]);\n  var disabledOkButton = useCallback(function () {\n    var start = selectedDates[0],\n        end = selectedDates[1];\n\n    if (!start || !end || !hasDoneSelect.current) {\n      return true;\n    }\n\n    return disabledByBetween(start, end, DATERANGE_DISABLED_TARGET.TOOLBAR_BUTTON_OK);\n  }, [disabledByBetween, selectedDates]);\n  var disabledShortcutButton = useCallback(function (value) {\n    if (value === void 0) {\n      value = [];\n    }\n\n    var _value = value,\n        start = _value[0],\n        end = _value[1];\n\n    if (!start || !end) {\n      return true;\n    }\n\n    return disabledByBetween(start, end, DATERANGE_DISABLED_TARGET.TOOLBAR_SHORTCUT);\n  }, [disabledByBetween]);\n  var handleDisabledDate = useCallback(function (date, values, type) {\n    return isDateDisabled(date, values, hasDoneSelect.current, type);\n  }, [isDateDisabled]);\n  var onPickerKeyDown = useToggleKeyDownEvent(_extends({\n    triggerRef: triggerRef,\n    targetRef: targetRef,\n    active: isPickerToggleActive,\n    onExit: handleClean\n  }, rest));\n\n  var renderDropdownMenu = function renderDropdownMenu(positionProps, speakerRef) {\n    var left = positionProps.left,\n        top = positionProps.top,\n        className = positionProps.className;\n    var classes = merge(className, menuClassName, prefix('daterange-menu'));\n    var panelClasses = prefix('daterange-panel', {\n      'daterange-panel-show-one-calendar': showOneCalendar\n    });\n\n    var styles = _extends({}, menuStyle, {\n      left: left,\n      top: top\n    });\n\n    var panelProps = {\n      calendarDate: calendarDate,\n      disabledDate: handleDisabledDate,\n      format: formatStr,\n      hoverRangeValue: hoverDateRange !== null && hoverDateRange !== void 0 ? hoverDateRange : undefined,\n      isoWeek: isoWeek,\n      limitEndYear: limitEndYear,\n      locale: locale,\n      showOneCalendar: showOneCalendar,\n      showWeekNumbers: showWeekNumbers,\n      value: selectedDates,\n      showMeridian: showMeridian,\n      onChangeCalendarDate: handleChangeCalendarDate,\n      onChangeCalendarTime: handleChangeCalendarTime,\n      onMouseMove: handleMouseMove,\n      onSelect: handleSelectDate,\n      onToggleMeridian: handleToggleMeridian\n    };\n    return /*#__PURE__*/React.createElement(PickerOverlay, {\n      className: classes,\n      ref: mergeRefs(overlayRef, speakerRef),\n      target: triggerRef,\n      style: styles\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: panelClasses\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: prefix('daterange-content')\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: prefix('daterange-header')\n    }, getDisplayString(selectedDates)), /*#__PURE__*/React.createElement(\"div\", {\n      className: prefix(\"daterange-calendar-\" + (showOneCalendar ? 'single' : 'group'))\n    }, /*#__PURE__*/React.createElement(Calendar, _extends({\n      index: 0\n    }, panelProps)), !showOneCalendar && /*#__PURE__*/React.createElement(Calendar, _extends({\n      index: 1\n    }, panelProps)))), /*#__PURE__*/React.createElement(Toolbar, {\n      locale: locale,\n      calendarDate: selectedDates,\n      disabledOkBtn: disabledOkButton,\n      disabledShortcut: disabledShortcutButton,\n      hideOkBtn: oneTap,\n      onOk: handleOK,\n      onClickShortcut: handleShortcutPageDate,\n      ranges: ranges\n    })));\n  };\n\n  var hasValue = !isNil(value) && value.length > 1;\n\n  var _usePickerClassName = usePickerClassName(_extends({}, props, {\n    classPrefix: classPrefix,\n    name: 'daterange',\n    appearance: appearance,\n    hasValue: hasValue,\n    cleanable: cleanable\n  })),\n      classes = _usePickerClassName[0],\n      usedClassNamePropKeys = _usePickerClassName[1];\n\n  return /*#__PURE__*/React.createElement(PickerToggleTrigger, {\n    pickerProps: pick(props, pickTriggerPropKeys),\n    ref: triggerRef,\n    placement: placement,\n    onEnter: createChainedFunction(handleEnter, onEnter),\n    onEntered: createChainedFunction(handleEntered, onEntered),\n    onExited: createChainedFunction(handleExited, onExited),\n    speaker: renderDropdownMenu\n  }, /*#__PURE__*/React.createElement(Component, {\n    ref: rootRef,\n    className: merge(className, classes, (_merge = {}, _merge[prefix('error')] = inputState === 'Error', _merge)),\n    style: style\n  }, /*#__PURE__*/React.createElement(PickerToggle, _extends({}, omit(rest, [].concat(omitTriggerPropKeys, usedClassNamePropKeys, DateUtils.calendarOnlyProps)), {\n    as: toggleAs,\n    ref: targetRef,\n    appearance: appearance,\n    input: true,\n    inputMask: DateUtils.getDateMask(rangeFormatStr),\n    inputValue: value ? getDisplayString(value, true) : '',\n    inputPlaceholder: typeof placeholder === 'string' && placeholder ? placeholder : rangeFormatStr,\n    onInputChange: handleInputChange,\n    onInputBlur: handleInputPressEnd,\n    onInputPressEnter: handleInputPressEnd,\n    onKeyDown: onPickerKeyDown,\n    onClean: createChainedFunction(handleClean, onClean),\n    cleanable: cleanable && !disabled,\n    hasValue: hasValue,\n    active: isPickerToggleActive,\n    placement: placement,\n    caretAs: IconCalendar,\n    disabled: disabled\n  }), getDisplayString(value))));\n});\nDateRangePicker.after = disabledDateUtils.after;\nDateRangePicker.afterToday = disabledDateUtils.afterToday;\nDateRangePicker.allowedDays = disabledDateUtils.allowedDays;\nDateRangePicker.allowedMaxDays = disabledDateUtils.allowedMaxDays;\nDateRangePicker.allowedRange = disabledDateUtils.allowedRange;\nDateRangePicker.before = disabledDateUtils.before;\nDateRangePicker.beforeToday = disabledDateUtils.beforeToday;\nDateRangePicker.combine = disabledDateUtils.combine;\nDateRangePicker.displayName = 'DateRangePicker';\nDateRangePicker.propTypes = _extends({}, pickerPropTypes, {\n  ranges: PropTypes.array,\n  value: PropTypes.arrayOf(PropTypes.instanceOf(Date)),\n  defaultValue: PropTypes.arrayOf(PropTypes.instanceOf(Date)),\n  defaultCalendarValue: PropTypes.arrayOf(PropTypes.instanceOf(Date)),\n  hoverRange: PropTypes.oneOfType([PropTypes.oneOf(['week', 'month']), PropTypes.func]),\n  format: PropTypes.string,\n  isoWeek: PropTypes.bool,\n  oneTap: PropTypes.bool,\n  limitEndYear: PropTypes.number,\n  onChange: PropTypes.func,\n  onOk: PropTypes.func,\n  disabledDate: PropTypes.func,\n  onSelect: PropTypes.func,\n  showWeekNumbers: PropTypes.bool,\n  showMeridian: PropTypes.bool,\n  showOneCalendar: PropTypes.bool\n});\nexport default DateRangePicker;","map":{"version":3,"sources":["/Users/supriyomal/Desktop/hekors-website-main/node_modules/rsuite/esm/DateRangePicker/DateRangePicker.js"],"names":["_extends","_objectWithoutPropertiesLoose","IconCalendar","isNil","omit","partial","pick","PropTypes","React","useCallback","useEffect","useRef","useState","FormattedDate","Toolbar","omitTriggerPropKeys","PickerOverlay","pickerPropTypes","PickerToggle","PickerToggleTrigger","pickTriggerPropKeys","usePickerClassName","usePublicMethods","useToggleKeyDownEvent","createChainedFunction","DATERANGE_DISABLED_TARGET","DateUtils","mergeRefs","useClassNames","useControlled","useCustom","addMonths","compareAsc","isSameMonth","Calendar","disabledDateUtils","getCalendarDate","getMonthHoverRange","getWeekHoverRange","isSameRange","setTimingMargin","DateRangePicker","forwardRef","props","ref","_ref","_ref2","_merge","_props$as","as","Component","_props$classPrefix","classPrefix","className","_props$appearance","appearance","_props$cleanable","cleanable","_props$character","character","defaultCalendarValue","defaultValue","disabled","disabledDateProp","disabledDate","_props$format","format","formatStr","hoverRange","_props$isoWeek","isoWeek","_props$limitEndYear","limitEndYear","overrideLocale","locale","menuClassName","menuStyle","oneTap","_props$placeholder","placeholder","_props$placement","placement","ranges","renderValue","_props$showOneCalenda","showOneCalendar","showWeekNumbers","showMeridian","style","toggleAs","valueProp","value","onChange","onClean","onClose","onEnter","onEntered","onExited","onOk","onOpen","onSelect","rest","_useClassNames","merge","prefix","_useCustom","formatDate","parseDate","rangeFormatStr","_useControlled","setValue","hasDoneSelect","_useState","selectedDates","setSelectedDates","_useState2","hoverDateRange","setHoverDateRange","_useState3","calendarDate","setCalendarDate","_useState4","inputState","setInputState","selectRangeValueRef","updateCalendarDate","_useState5","isPickerToggleActive","setPickerToggleActive","rootRef","overlayRef","targetRef","triggerRef","handleCloseDropdown","_triggerRef$current","_triggerRef$current$c","current","close","call","getDisplayString","nextValue","isPlaintext","_nextValue$","_nextValue$2","startDate","endDate","displayValue","sort","createElement","Fragment","date","getHoverRangeValue","getHoverRangeFunc","hoverRangeFunc","hoverValues","isHoverRangeValid","Array","length","isAfter","reverse","handleValueUpdate","event","closeOverlay","handleMouseMove","nextHoverDateRange","nextSelectedDates","isBefore","prevHoverValue","handleSelectDate","nextSelectDates","hoverRangeValue","noHoverRangeValid","selectValueLength","doneSelected","handleChangeCalendarDate","index","nextCalendarDate","from","handleChangeCalendarTime","prev","next","concat","clonedDate","Date","valueOf","setFullYear","getFullYear","getMonth","getDate","handleToggleMeridian","hours","getHours","nextHours","setHours","handleShortcutPageDate","handleOK","handleClean","handleInputChange","rangeValue","split","isMatch","dateLocale","selectValue","isValid","isDateDisabled","CALENDAR","handleInputPressEnd","handleEnter","_startDate","endData","handleEntered","handleExited","selectDate","selectedDone","target","_disabledDateProp","disabledByBetween","start","end","type","isSameDay","addDays","disabledOkButton","TOOLBAR_BUTTON_OK","disabledShortcutButton","_value","TOOLBAR_SHORTCUT","handleDisabledDate","values","onPickerKeyDown","active","onExit","renderDropdownMenu","positionProps","speakerRef","left","top","classes","panelClasses","styles","panelProps","undefined","onChangeCalendarDate","onChangeCalendarTime","onMouseMove","onToggleMeridian","disabledOkBtn","disabledShortcut","hideOkBtn","onClickShortcut","hasValue","_usePickerClassName","name","usedClassNamePropKeys","pickerProps","speaker","calendarOnlyProps","input","inputMask","getDateMask","inputValue","inputPlaceholder","onInputChange","onInputBlur","onInputPressEnter","onKeyDown","caretAs","after","afterToday","allowedDays","allowedMaxDays","allowedRange","before","beforeToday","combine","displayName","propTypes","array","arrayOf","instanceOf","oneOfType","oneOf","func","string","bool","number"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport IconCalendar from '@rsuite/icons/legacy/Calendar';\nimport isNil from 'lodash/isNil';\nimport omit from 'lodash/omit';\nimport partial from 'lodash/partial';\nimport pick from 'lodash/pick';\nimport PropTypes from 'prop-types';\nimport React, { useCallback, useEffect, useRef, useState } from 'react';\nimport { FormattedDate } from '../CustomProvider';\nimport Toolbar from '../DatePicker/Toolbar';\nimport { omitTriggerPropKeys, PickerOverlay, pickerPropTypes, PickerToggle, PickerToggleTrigger, pickTriggerPropKeys, usePickerClassName, usePublicMethods, useToggleKeyDownEvent } from '../Picker';\nimport { createChainedFunction, DATERANGE_DISABLED_TARGET, DateUtils, mergeRefs, useClassNames, useControlled, useCustom } from '../utils';\nimport { addMonths, compareAsc, isSameMonth } from '../utils/dateUtils';\nimport Calendar from './Calendar';\nimport * as disabledDateUtils from './disabledDateUtils';\nimport { getCalendarDate, getMonthHoverRange, getWeekHoverRange, isSameRange, setTimingMargin } from './utils';\nvar DateRangePicker = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var _ref, _ref2, _merge;\n\n  var _props$as = props.as,\n      Component = _props$as === void 0 ? 'div' : _props$as,\n      _props$classPrefix = props.classPrefix,\n      classPrefix = _props$classPrefix === void 0 ? 'picker' : _props$classPrefix,\n      className = props.className,\n      _props$appearance = props.appearance,\n      appearance = _props$appearance === void 0 ? 'default' : _props$appearance,\n      _props$cleanable = props.cleanable,\n      cleanable = _props$cleanable === void 0 ? true : _props$cleanable,\n      _props$character = props.character,\n      character = _props$character === void 0 ? ' ~ ' : _props$character,\n      defaultCalendarValue = props.defaultCalendarValue,\n      defaultValue = props.defaultValue,\n      disabled = props.disabled,\n      disabledDateProp = props.disabledDate,\n      _props$format = props.format,\n      formatStr = _props$format === void 0 ? 'yyyy-MM-dd' : _props$format,\n      hoverRange = props.hoverRange,\n      _props$isoWeek = props.isoWeek,\n      isoWeek = _props$isoWeek === void 0 ? false : _props$isoWeek,\n      _props$limitEndYear = props.limitEndYear,\n      limitEndYear = _props$limitEndYear === void 0 ? 1000 : _props$limitEndYear,\n      overrideLocale = props.locale,\n      menuClassName = props.menuClassName,\n      menuStyle = props.menuStyle,\n      oneTap = props.oneTap,\n      _props$placeholder = props.placeholder,\n      placeholder = _props$placeholder === void 0 ? '' : _props$placeholder,\n      _props$placement = props.placement,\n      placement = _props$placement === void 0 ? 'bottomStart' : _props$placement,\n      ranges = props.ranges,\n      renderValue = props.renderValue,\n      _props$showOneCalenda = props.showOneCalendar,\n      showOneCalendar = _props$showOneCalenda === void 0 ? false : _props$showOneCalenda,\n      showWeekNumbers = props.showWeekNumbers,\n      showMeridian = props.showMeridian,\n      style = props.style,\n      toggleAs = props.toggleAs,\n      valueProp = props.value,\n      onChange = props.onChange,\n      onClean = props.onClean,\n      onClose = props.onClose,\n      onEnter = props.onEnter,\n      onEntered = props.onEntered,\n      onExited = props.onExited,\n      onOk = props.onOk,\n      onOpen = props.onOpen,\n      onSelect = props.onSelect,\n      rest = _objectWithoutPropertiesLoose(props, [\"as\", \"classPrefix\", \"className\", \"appearance\", \"cleanable\", \"character\", \"defaultCalendarValue\", \"defaultValue\", \"disabled\", \"disabledDate\", \"format\", \"hoverRange\", \"isoWeek\", \"limitEndYear\", \"locale\", \"menuClassName\", \"menuStyle\", \"oneTap\", \"placeholder\", \"placement\", \"ranges\", \"renderValue\", \"showOneCalendar\", \"showWeekNumbers\", \"showMeridian\", \"style\", \"toggleAs\", \"value\", \"onChange\", \"onClean\", \"onClose\", \"onEnter\", \"onEntered\", \"onExited\", \"onOk\", \"onOpen\", \"onSelect\"]);\n\n  var _useClassNames = useClassNames(classPrefix),\n      merge = _useClassNames.merge,\n      prefix = _useClassNames.prefix;\n\n  var _useCustom = useCustom('DateRangePicker', overrideLocale),\n      locale = _useCustom.locale,\n      formatDate = _useCustom.formatDate,\n      parseDate = _useCustom.parseDate;\n\n  var rangeFormatStr = \"\" + formatStr + character + formatStr;\n\n  var _useControlled = useControlled(valueProp, defaultValue !== null && defaultValue !== void 0 ? defaultValue : null),\n      value = _useControlled[0],\n      setValue = _useControlled[1];\n  /**\n   * Whether to complete the selection.\n   * Everytime selection will change this value. If the value is false, it means that the selection has not been completed.\n   *\n   * In `oneTap` mode, select action will not change this value, its value should be true always.\n   */\n\n\n  var hasDoneSelect = useRef(true);\n  /**\n   * The currently selected date range.\n   *\n   * The time range is selected by two clicks. After the first click,\n   * the cursor will store a temporary event date in the process until\n   * the second click to determine the end date of the date range.\n   *\n   */\n\n  var _useState = useState((_ref = valueProp !== null && valueProp !== void 0 ? valueProp : defaultValue) !== null && _ref !== void 0 ? _ref : []),\n      selectedDates = _useState[0],\n      setSelectedDates = _useState[1]; // The date of the current hover, used to reduce the calculation of `handleMouseMove`\n\n\n  var _useState2 = useState(null),\n      hoverDateRange = _useState2[0],\n      setHoverDateRange = _useState2[1]; // The displayed calendar panel is rendered based on this value.\n\n\n  var _useState3 = useState(getCalendarDate({\n    value: (_ref2 = valueProp !== null && valueProp !== void 0 ? valueProp : defaultCalendarValue) !== null && _ref2 !== void 0 ? _ref2 : null\n  })),\n      calendarDate = _useState3[0],\n      setCalendarDate = _useState3[1];\n\n  var _useState4 = useState(),\n      inputState = _useState4[0],\n      setInputState = _useState4[1];\n  /**\n   * When hoverRange is set, `selectValue` will be updated during the hover process,\n   * which will cause the `selectValue` to be updated after the first click,\n   * so declare a Ref to temporarily store the `selectValue` of the first click.\n   */\n\n\n  var selectRangeValueRef = useRef(null);\n  /**\n   * Call this function to update the calendar panel rendering benchmark value.\n   * If params `value` is not passed, it defaults to [new Date(), addMonth(new Date(), 1)].\n   */\n\n  var updateCalendarDate = useCallback(function (value) {\n    setCalendarDate(getCalendarDate({\n      value: value\n    }));\n  }, []); // if valueProp changed then update selectValue/hoverValue\n\n  useEffect(function () {\n    setSelectedDates(valueProp !== null && valueProp !== void 0 ? valueProp : []);\n    setHoverDateRange(valueProp !== null && valueProp !== void 0 ? valueProp : null);\n  }, [valueProp]);\n\n  var _useState5 = useState(false),\n      isPickerToggleActive = _useState5[0],\n      setPickerToggleActive = _useState5[1];\n\n  var rootRef = useRef(null);\n  var overlayRef = useRef(null);\n  var targetRef = useRef(null);\n  var triggerRef = useRef(null);\n  var handleCloseDropdown = useCallback(function () {\n    var _triggerRef$current, _triggerRef$current$c;\n\n    (_triggerRef$current = triggerRef.current) === null || _triggerRef$current === void 0 ? void 0 : (_triggerRef$current$c = _triggerRef$current.close) === null || _triggerRef$current$c === void 0 ? void 0 : _triggerRef$current$c.call(_triggerRef$current);\n  }, []);\n  usePublicMethods(ref, {\n    triggerRef: triggerRef,\n    overlayRef: overlayRef,\n    targetRef: targetRef,\n    rootRef: rootRef\n  });\n  var getDisplayString = useCallback(function (nextValue, isPlaintext) {\n    var _nextValue$, _nextValue$2;\n\n    var startDate = (_nextValue$ = nextValue === null || nextValue === void 0 ? void 0 : nextValue[0]) !== null && _nextValue$ !== void 0 ? _nextValue$ : null;\n    var endDate = (_nextValue$2 = nextValue === null || nextValue === void 0 ? void 0 : nextValue[1]) !== null && _nextValue$2 !== void 0 ? _nextValue$2 : null;\n\n    if (startDate && endDate) {\n      var displayValue = [startDate, endDate].sort(compareAsc);\n\n      if (isPlaintext) {\n        return formatDate(displayValue[0], formatStr) + character + formatDate(displayValue[1], formatStr);\n      }\n\n      return renderValue ? renderValue(displayValue, formatStr) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(FormattedDate, {\n        date: displayValue[0],\n        formatStr: formatStr\n      }), character, /*#__PURE__*/React.createElement(FormattedDate, {\n        date: displayValue[1],\n        formatStr: formatStr\n      }));\n    }\n\n    return isPlaintext ? '' : placeholder || rangeFormatStr;\n  }, [character, formatDate, formatStr, placeholder, rangeFormatStr, renderValue]);\n  /**\n   * preset hover range\n   */\n\n  var getHoverRangeValue = useCallback(function (date) {\n    function getHoverRangeFunc() {\n      if (hoverRange === 'week') {\n        return partial(getWeekHoverRange, isoWeek);\n      } else if (hoverRange === 'month') {\n        return getMonthHoverRange;\n      }\n\n      return hoverRange;\n    }\n\n    var hoverRangeFunc = getHoverRangeFunc();\n\n    if (isNil(hoverRangeFunc)) {\n      return null;\n    }\n\n    var hoverValues = hoverRangeFunc(date);\n    var isHoverRangeValid = hoverValues instanceof Array && hoverValues.length === 2;\n\n    if (!isHoverRangeValid) {\n      return null;\n    }\n\n    if (DateUtils.isAfter(hoverValues[0], hoverValues[1])) {\n      hoverValues.reverse();\n    }\n\n    return hoverValues;\n  }, [hoverRange, isoWeek]);\n  var handleValueUpdate = useCallback(function (event, nextValue, closeOverlay) {\n    if (closeOverlay === void 0) {\n      closeOverlay = true;\n    }\n\n    // If nextValue is null, it means that the user is erasing the selected dates.\n    setSelectedDates(nextValue !== null && nextValue !== void 0 ? nextValue : []);\n\n    if (!isSameRange(nextValue, value, formatStr)) {\n      setValue(nextValue);\n      onChange === null || onChange === void 0 ? void 0 : onChange(nextValue, event);\n    } // `closeOverlay` default value is `true`\n\n\n    if (closeOverlay !== false) {\n      handleCloseDropdown();\n    }\n  }, [formatStr, handleCloseDropdown, onChange, setValue, value]);\n  /**\n   * Select the date range. If oneTap is not set, you need to click twice to select the start time and end time.\n   * The MouseMove event is called between the first click and the second click to update the selection state.\n   */\n\n  var handleMouseMove = useCallback(function (date) {\n    var nextHoverDateRange = getHoverRangeValue(date); // If hasDoneSelect is false,\n    // it means there's already one selected date\n    // and waiting for user to select the second date to complete the selection.\n\n    if (!hasDoneSelect.current) {\n      // If `hoverRange` is set, you need to change the value of hoverDateRange according to the rules\n      if (!isNil(nextHoverDateRange) && !isNil(selectRangeValueRef.current)) {\n        var nextSelectedDates = [selectRangeValueRef.current[0], nextHoverDateRange[1]];\n\n        if (DateUtils.isBefore(nextHoverDateRange[0], selectRangeValueRef.current[0])) {\n          nextSelectedDates = [nextHoverDateRange[0], selectRangeValueRef.current[1]];\n        }\n\n        setSelectedDates(nextSelectedDates);\n      } else {\n        setHoverDateRange(function (prevHoverValue) {\n          return isNil(prevHoverValue) ? null : [prevHoverValue[0], date];\n        });\n      } // Before the first click, if nextHoverDateRange has a value, hoverDateRange needs to be updated\n\n    } else if (!isNil(nextHoverDateRange)) {\n      setHoverDateRange(nextHoverDateRange);\n    }\n  }, [getHoverRangeValue]);\n  /**\n   * Callback for selecting a date cell in the calendar grid\n   */\n\n  var handleSelectDate = useCallback(function (date, event) {\n    var nextSelectDates = hoverDateRange !== null && hoverDateRange !== void 0 ? hoverDateRange : [];\n    var hoverRangeValue = getHoverRangeValue(date);\n    var noHoverRangeValid = isNil(hoverRangeValue); // in `oneTap` mode\n\n    if (hasDoneSelect.current && oneTap) {\n      handleValueUpdate(event, noHoverRangeValid ? [setTimingMargin(date), setTimingMargin(date, 'right')] : hoverRangeValue);\n      hasDoneSelect.current = false;\n      return;\n    } // no preset hover range can use\n\n\n    if (noHoverRangeValid) {\n      // start select\n      if (hasDoneSelect.current) {\n        nextSelectDates = [date];\n      } else {\n        // finish select\n        nextSelectDates[1] = date;\n      }\n    } else {\n      if (!hasDoneSelect.current) {\n        nextSelectDates = selectedDates;\n        selectRangeValueRef.current = null;\n      } else {\n        nextSelectDates = hoverRangeValue;\n        selectRangeValueRef.current = hoverRangeValue;\n      }\n    } // If user have completed the selection, then sort\n\n\n    if (nextSelectDates.length === 2 && DateUtils.isAfter(nextSelectDates[0], nextSelectDates[1])) {\n      nextSelectDates.reverse();\n    }\n\n    setHoverDateRange(nextSelectDates.length === 2 ? nextSelectDates : [nextSelectDates[0], nextSelectDates[0]]);\n    setSelectedDates(nextSelectDates);\n    updateCalendarDate(nextSelectDates);\n    onSelect === null || onSelect === void 0 ? void 0 : onSelect(date, event);\n    hasDoneSelect.current = !hasDoneSelect.current;\n  }, [getHoverRangeValue, handleValueUpdate, hoverDateRange, onSelect, oneTap, selectedDates, updateCalendarDate]);\n  /**\n   * If `selectValue` changed, there will be the following effects.\n   * 1. Check if the selection is completed.\n   * 2. if the selection is completed, set the temporary `hoverValue` empty.\n   */\n\n  useEffect(function () {\n    var selectValueLength = selectedDates.length;\n    var doneSelected = selectValueLength === 0 || selectValueLength === 2;\n    doneSelected && setHoverDateRange(null);\n  }, [selectedDates]);\n  var handleChangeCalendarDate = useCallback(function (index, date) {\n    var nextCalendarDate = Array.from(calendarDate);\n    nextCalendarDate[index] = date;\n    updateCalendarDate(nextCalendarDate);\n  }, [calendarDate, updateCalendarDate]);\n  var handleChangeCalendarTime = useCallback(function (index, date) {\n    setSelectedDates(function (prev) {\n      var next = [].concat(prev);\n      var clonedDate = new Date(date.valueOf()); // if next[index] is not empty, only update the time after aligning the year, month and day\n\n      if (next[index]) {\n        clonedDate.setFullYear(next[index].getFullYear(), next[index].getMonth(), next[index].getDate());\n      }\n\n      next[index] = clonedDate;\n      return next;\n    });\n    handleChangeCalendarDate(index, date);\n  }, [handleChangeCalendarDate]);\n  /**\n   * The callback triggered when PM/AM is switched.\n   */\n\n  var handleToggleMeridian = useCallback(function (index) {\n    var next = Array.from(calendarDate);\n    var clonedDate = new Date(next[index].valueOf());\n    var hours = DateUtils.getHours(clonedDate);\n    var nextHours = hours >= 12 ? hours - 12 : hours + 12;\n    next[index] = DateUtils.setHours(clonedDate, nextHours);\n    setCalendarDate(next); // If the value already exists, update the value again.\n\n    if (selectedDates.length === 2) {\n      setSelectedDates(next);\n    }\n  }, [calendarDate, selectedDates]);\n  /**\n   * Toolbar operation callback function\n   */\n\n  var handleShortcutPageDate = useCallback(function (value, closeOverlay, event) {\n    if (closeOverlay === void 0) {\n      closeOverlay = false;\n    }\n\n    handleValueUpdate(event, value, closeOverlay);\n  }, [handleValueUpdate]);\n  var handleOK = useCallback(function (event) {\n    handleValueUpdate(event, selectedDates);\n    onOk === null || onOk === void 0 ? void 0 : onOk(selectedDates, event);\n  }, [handleValueUpdate, onOk, selectedDates]);\n  var handleClean = useCallback(function (event) {\n    updateCalendarDate(null);\n    handleValueUpdate(event, null);\n  }, [handleValueUpdate, updateCalendarDate]);\n  /**\n   * Callback after the input box value is changed.\n   */\n\n  var handleInputChange = useCallback(function (value) {\n    setInputState('Typing');\n    var rangeValue = value.split(character); // isMatch('01/11/2020', 'MM/dd/yyyy') ==> true\n    // isMatch('2020-11-01', 'MM/dd/yyyy') ==> false\n\n    if (!DateUtils.isMatch(rangeValue[0], formatStr, {\n      locale: locale.dateLocale\n    }) || !DateUtils.isMatch(rangeValue[1], formatStr, {\n      locale: locale.dateLocale\n    })) {\n      setInputState('Error');\n      return;\n    }\n\n    var startDate = parseDate(rangeValue[0], formatStr);\n    var endDate = parseDate(rangeValue[1], formatStr);\n    var selectValue = [startDate, endDate];\n\n    if (!DateUtils.isValid(startDate) || !DateUtils.isValid(endDate)) {\n      setInputState('Error');\n      return;\n    }\n\n    if (isDateDisabled(startDate, selectValue, true, DATERANGE_DISABLED_TARGET.CALENDAR)) {\n      setInputState('Error');\n      return;\n    }\n\n    setHoverDateRange(selectValue);\n    setSelectedDates(selectValue);\n    updateCalendarDate(selectValue);\n  }, // eslint-disable-next-line react-hooks/exhaustive-deps\n  [character, rangeFormatStr, updateCalendarDate]);\n  /**\n   * The callback after the enter key is triggered on the input\n   */\n\n  var handleInputPressEnd = useCallback(function (event) {\n    if (inputState === 'Typing') {\n      handleValueUpdate(event, selectedDates.length === 2 ? selectedDates : null);\n    }\n\n    setInputState('Initial');\n  }, [handleValueUpdate, selectedDates, inputState]);\n  var handleEnter = useCallback(function () {\n    var nextCalendarDate;\n\n    if (value && value.length) {\n      var _startDate = value[0],\n          endData = value[1];\n      nextCalendarDate = [_startDate, isSameMonth(_startDate, endData) ? addMonths(endData, 1) : endData];\n    } else {\n      nextCalendarDate = getCalendarDate({\n        value: defaultCalendarValue !== null && defaultCalendarValue !== void 0 ? defaultCalendarValue : null\n      });\n    }\n\n    setSelectedDates(value !== null && value !== void 0 ? value : []);\n    updateCalendarDate(nextCalendarDate);\n  }, [defaultCalendarValue, updateCalendarDate, setSelectedDates, value]);\n  var handleEntered = useCallback(function () {\n    onOpen === null || onOpen === void 0 ? void 0 : onOpen();\n    setPickerToggleActive(true);\n  }, [onOpen]);\n  var handleExited = useCallback(function () {\n    setPickerToggleActive(false);\n    hasDoneSelect.current = true;\n    onClose === null || onClose === void 0 ? void 0 : onClose();\n  }, [onClose]);\n  var isDateDisabled = useCallback(function (date, selectDate, selectedDone, target) {\n    var _disabledDateProp;\n\n    return (_disabledDateProp = disabledDateProp === null || disabledDateProp === void 0 ? void 0 : disabledDateProp(date, selectDate, selectedDone, target)) !== null && _disabledDateProp !== void 0 ? _disabledDateProp : false;\n  }, [disabledDateProp]);\n  var disabledByBetween = useCallback(function (start, end, type) {\n    // If the date is between the start and the end\n    // the button is disabled\n    while (DateUtils.isBefore(start, end) || DateUtils.isSameDay(start, end)) {\n      if (isDateDisabled(start, selectedDates, hasDoneSelect.current, type)) {\n        return true;\n      }\n\n      start = DateUtils.addDays(start, 1);\n    }\n\n    return false;\n  }, [isDateDisabled, selectedDates]);\n  var disabledOkButton = useCallback(function () {\n    var start = selectedDates[0],\n        end = selectedDates[1];\n\n    if (!start || !end || !hasDoneSelect.current) {\n      return true;\n    }\n\n    return disabledByBetween(start, end, DATERANGE_DISABLED_TARGET.TOOLBAR_BUTTON_OK);\n  }, [disabledByBetween, selectedDates]);\n  var disabledShortcutButton = useCallback(function (value) {\n    if (value === void 0) {\n      value = [];\n    }\n\n    var _value = value,\n        start = _value[0],\n        end = _value[1];\n\n    if (!start || !end) {\n      return true;\n    }\n\n    return disabledByBetween(start, end, DATERANGE_DISABLED_TARGET.TOOLBAR_SHORTCUT);\n  }, [disabledByBetween]);\n  var handleDisabledDate = useCallback(function (date, values, type) {\n    return isDateDisabled(date, values, hasDoneSelect.current, type);\n  }, [isDateDisabled]);\n  var onPickerKeyDown = useToggleKeyDownEvent(_extends({\n    triggerRef: triggerRef,\n    targetRef: targetRef,\n    active: isPickerToggleActive,\n    onExit: handleClean\n  }, rest));\n\n  var renderDropdownMenu = function renderDropdownMenu(positionProps, speakerRef) {\n    var left = positionProps.left,\n        top = positionProps.top,\n        className = positionProps.className;\n    var classes = merge(className, menuClassName, prefix('daterange-menu'));\n    var panelClasses = prefix('daterange-panel', {\n      'daterange-panel-show-one-calendar': showOneCalendar\n    });\n\n    var styles = _extends({}, menuStyle, {\n      left: left,\n      top: top\n    });\n\n    var panelProps = {\n      calendarDate: calendarDate,\n      disabledDate: handleDisabledDate,\n      format: formatStr,\n      hoverRangeValue: hoverDateRange !== null && hoverDateRange !== void 0 ? hoverDateRange : undefined,\n      isoWeek: isoWeek,\n      limitEndYear: limitEndYear,\n      locale: locale,\n      showOneCalendar: showOneCalendar,\n      showWeekNumbers: showWeekNumbers,\n      value: selectedDates,\n      showMeridian: showMeridian,\n      onChangeCalendarDate: handleChangeCalendarDate,\n      onChangeCalendarTime: handleChangeCalendarTime,\n      onMouseMove: handleMouseMove,\n      onSelect: handleSelectDate,\n      onToggleMeridian: handleToggleMeridian\n    };\n    return /*#__PURE__*/React.createElement(PickerOverlay, {\n      className: classes,\n      ref: mergeRefs(overlayRef, speakerRef),\n      target: triggerRef,\n      style: styles\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: panelClasses\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: prefix('daterange-content')\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: prefix('daterange-header')\n    }, getDisplayString(selectedDates)), /*#__PURE__*/React.createElement(\"div\", {\n      className: prefix(\"daterange-calendar-\" + (showOneCalendar ? 'single' : 'group'))\n    }, /*#__PURE__*/React.createElement(Calendar, _extends({\n      index: 0\n    }, panelProps)), !showOneCalendar && /*#__PURE__*/React.createElement(Calendar, _extends({\n      index: 1\n    }, panelProps)))), /*#__PURE__*/React.createElement(Toolbar, {\n      locale: locale,\n      calendarDate: selectedDates,\n      disabledOkBtn: disabledOkButton,\n      disabledShortcut: disabledShortcutButton,\n      hideOkBtn: oneTap,\n      onOk: handleOK,\n      onClickShortcut: handleShortcutPageDate,\n      ranges: ranges\n    })));\n  };\n\n  var hasValue = !isNil(value) && value.length > 1;\n\n  var _usePickerClassName = usePickerClassName(_extends({}, props, {\n    classPrefix: classPrefix,\n    name: 'daterange',\n    appearance: appearance,\n    hasValue: hasValue,\n    cleanable: cleanable\n  })),\n      classes = _usePickerClassName[0],\n      usedClassNamePropKeys = _usePickerClassName[1];\n\n  return /*#__PURE__*/React.createElement(PickerToggleTrigger, {\n    pickerProps: pick(props, pickTriggerPropKeys),\n    ref: triggerRef,\n    placement: placement,\n    onEnter: createChainedFunction(handleEnter, onEnter),\n    onEntered: createChainedFunction(handleEntered, onEntered),\n    onExited: createChainedFunction(handleExited, onExited),\n    speaker: renderDropdownMenu\n  }, /*#__PURE__*/React.createElement(Component, {\n    ref: rootRef,\n    className: merge(className, classes, (_merge = {}, _merge[prefix('error')] = inputState === 'Error', _merge)),\n    style: style\n  }, /*#__PURE__*/React.createElement(PickerToggle, _extends({}, omit(rest, [].concat(omitTriggerPropKeys, usedClassNamePropKeys, DateUtils.calendarOnlyProps)), {\n    as: toggleAs,\n    ref: targetRef,\n    appearance: appearance,\n    input: true,\n    inputMask: DateUtils.getDateMask(rangeFormatStr),\n    inputValue: value ? getDisplayString(value, true) : '',\n    inputPlaceholder: typeof placeholder === 'string' && placeholder ? placeholder : rangeFormatStr,\n    onInputChange: handleInputChange,\n    onInputBlur: handleInputPressEnd,\n    onInputPressEnter: handleInputPressEnd,\n    onKeyDown: onPickerKeyDown,\n    onClean: createChainedFunction(handleClean, onClean),\n    cleanable: cleanable && !disabled,\n    hasValue: hasValue,\n    active: isPickerToggleActive,\n    placement: placement,\n    caretAs: IconCalendar,\n    disabled: disabled\n  }), getDisplayString(value))));\n});\nDateRangePicker.after = disabledDateUtils.after;\nDateRangePicker.afterToday = disabledDateUtils.afterToday;\nDateRangePicker.allowedDays = disabledDateUtils.allowedDays;\nDateRangePicker.allowedMaxDays = disabledDateUtils.allowedMaxDays;\nDateRangePicker.allowedRange = disabledDateUtils.allowedRange;\nDateRangePicker.before = disabledDateUtils.before;\nDateRangePicker.beforeToday = disabledDateUtils.beforeToday;\nDateRangePicker.combine = disabledDateUtils.combine;\nDateRangePicker.displayName = 'DateRangePicker';\nDateRangePicker.propTypes = _extends({}, pickerPropTypes, {\n  ranges: PropTypes.array,\n  value: PropTypes.arrayOf(PropTypes.instanceOf(Date)),\n  defaultValue: PropTypes.arrayOf(PropTypes.instanceOf(Date)),\n  defaultCalendarValue: PropTypes.arrayOf(PropTypes.instanceOf(Date)),\n  hoverRange: PropTypes.oneOfType([PropTypes.oneOf(['week', 'month']), PropTypes.func]),\n  format: PropTypes.string,\n  isoWeek: PropTypes.bool,\n  oneTap: PropTypes.bool,\n  limitEndYear: PropTypes.number,\n  onChange: PropTypes.func,\n  onOk: PropTypes.func,\n  disabledDate: PropTypes.func,\n  onSelect: PropTypes.func,\n  showWeekNumbers: PropTypes.bool,\n  showMeridian: PropTypes.bool,\n  showOneCalendar: PropTypes.bool\n});\nexport default DateRangePicker;"]},"metadata":{},"sourceType":"module"}