{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\"; // Headless Disclosure\n// Ref: https://w3c.github.io/aria-practices/#disclosure\n\nimport React, { useMemo, useReducer, useRef, useCallback, useContext } from 'react';\nimport DisclosureContext, { DisclosureActionTypes } from './DisclosureContext';\nimport DisclosureButton from './DisclosureButton';\nimport DisclosureContent from './DisclosureContent';\nimport useClickOutside from '../utils/useClickOutside';\nvar initialDisclosureState = {\n  open: false\n};\n\nfunction disclosureReducer(state, action) {\n  switch (action.type) {\n    case DisclosureActionTypes.Show:\n      return _extends({}, state, {\n        open: true\n      });\n\n    case DisclosureActionTypes.Hide:\n      return _extends({}, state, {\n        open: false\n      });\n  }\n\n  return state;\n}\n\nvar Disclosure = /*#__PURE__*/React.memo(function (props) {\n  var children = props.children,\n      openProp = props.open,\n      _props$defaultOpen = props.defaultOpen,\n      defaultOpen = _props$defaultOpen === void 0 ? false : _props$defaultOpen,\n      _props$hideOnClickOut = props.hideOnClickOutside,\n      hideOnClickOutside = _props$hideOnClickOut === void 0 ? false : _props$hideOnClickOut,\n      onToggle = props.onToggle,\n      _props$trigger = props.trigger,\n      trigger = _props$trigger === void 0 ? ['click'] : _props$trigger;\n  var parentDisclosure = useContext(DisclosureContext);\n\n  var _useReducer = useReducer(disclosureReducer, _extends({}, initialDisclosureState, {\n    open: defaultOpen\n  })),\n      openState = _useReducer[0].open,\n      dispatch = _useReducer[1];\n\n  var containerElementRef = useRef(null);\n  var open = openProp !== null && openProp !== void 0 ? openProp : openState;\n  useClickOutside({\n    enabled: hideOnClickOutside,\n    isOutside: function isOutside(event) {\n      var _containerElementRef$;\n\n      return !((_containerElementRef$ = containerElementRef.current) !== null && _containerElementRef$ !== void 0 && _containerElementRef$.contains(event.target));\n    },\n    handle: function handle() {\n      return dispatch({\n        type: DisclosureActionTypes.Hide\n      });\n    }\n  });\n  var onMouseOver = useCallback(function (event) {\n    if (!open) {\n      dispatch({\n        type: DisclosureActionTypes.Show\n      });\n      onToggle === null || onToggle === void 0 ? void 0 : onToggle(true, event);\n    }\n  }, [open, dispatch, onToggle]);\n  var onMouseOut = useCallback(function (event) {\n    if (open) {\n      dispatch({\n        type: DisclosureActionTypes.Hide\n      });\n      onToggle === null || onToggle === void 0 ? void 0 : onToggle(false, event);\n    }\n  }, [open, dispatch, onToggle]);\n  var contextValue = useMemo(function () {\n    var cascadeDispatch = function cascadeDispatch(action) {\n      var result = dispatch(action);\n\n      if ('cascade' in action) {\n        parentDisclosure === null || parentDisclosure === void 0 ? void 0 : parentDisclosure[1](action);\n      }\n\n      return result;\n    };\n\n    return [{\n      open: open\n    }, cascadeDispatch, {\n      onToggle: onToggle,\n      trigger: trigger\n    }];\n  }, [parentDisclosure, open, dispatch, onToggle, trigger]);\n  var renderProps = useMemo(function () {\n    var renderProps = {\n      open: open\n    };\n\n    if (trigger.includes('mouseover')) {\n      renderProps.onMouseOver = onMouseOver;\n      renderProps.onMouseOut = onMouseOut;\n    }\n\n    return renderProps;\n  }, [open, trigger, onMouseOver, onMouseOut]);\n  return /*#__PURE__*/React.createElement(DisclosureContext.Provider, {\n    value: contextValue\n  }, children(renderProps, containerElementRef));\n});\nDisclosure.Button = DisclosureButton;\nDisclosure.Content = DisclosureContent;\nexport default Disclosure;","map":{"version":3,"sources":["/Users/supriyomal/Desktop/hekors-website-main/node_modules/rsuite/esm/Disclosure/Disclosure.js"],"names":["_extends","React","useMemo","useReducer","useRef","useCallback","useContext","DisclosureContext","DisclosureActionTypes","DisclosureButton","DisclosureContent","useClickOutside","initialDisclosureState","open","disclosureReducer","state","action","type","Show","Hide","Disclosure","memo","props","children","openProp","_props$defaultOpen","defaultOpen","_props$hideOnClickOut","hideOnClickOutside","onToggle","_props$trigger","trigger","parentDisclosure","_useReducer","openState","dispatch","containerElementRef","enabled","isOutside","event","_containerElementRef$","current","contains","target","handle","onMouseOver","onMouseOut","contextValue","cascadeDispatch","result","renderProps","includes","createElement","Provider","value","Button","Content"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\n// Headless Disclosure\n// Ref: https://w3c.github.io/aria-practices/#disclosure\nimport React, { useMemo, useReducer, useRef, useCallback, useContext } from 'react';\nimport DisclosureContext, { DisclosureActionTypes } from './DisclosureContext';\nimport DisclosureButton from './DisclosureButton';\nimport DisclosureContent from './DisclosureContent';\nimport useClickOutside from '../utils/useClickOutside';\nvar initialDisclosureState = {\n  open: false\n};\n\nfunction disclosureReducer(state, action) {\n  switch (action.type) {\n    case DisclosureActionTypes.Show:\n      return _extends({}, state, {\n        open: true\n      });\n\n    case DisclosureActionTypes.Hide:\n      return _extends({}, state, {\n        open: false\n      });\n  }\n\n  return state;\n}\n\nvar Disclosure = /*#__PURE__*/React.memo(function (props) {\n  var children = props.children,\n      openProp = props.open,\n      _props$defaultOpen = props.defaultOpen,\n      defaultOpen = _props$defaultOpen === void 0 ? false : _props$defaultOpen,\n      _props$hideOnClickOut = props.hideOnClickOutside,\n      hideOnClickOutside = _props$hideOnClickOut === void 0 ? false : _props$hideOnClickOut,\n      onToggle = props.onToggle,\n      _props$trigger = props.trigger,\n      trigger = _props$trigger === void 0 ? ['click'] : _props$trigger;\n  var parentDisclosure = useContext(DisclosureContext);\n\n  var _useReducer = useReducer(disclosureReducer, _extends({}, initialDisclosureState, {\n    open: defaultOpen\n  })),\n      openState = _useReducer[0].open,\n      dispatch = _useReducer[1];\n\n  var containerElementRef = useRef(null);\n  var open = openProp !== null && openProp !== void 0 ? openProp : openState;\n  useClickOutside({\n    enabled: hideOnClickOutside,\n    isOutside: function isOutside(event) {\n      var _containerElementRef$;\n\n      return !((_containerElementRef$ = containerElementRef.current) !== null && _containerElementRef$ !== void 0 && _containerElementRef$.contains(event.target));\n    },\n    handle: function handle() {\n      return dispatch({\n        type: DisclosureActionTypes.Hide\n      });\n    }\n  });\n  var onMouseOver = useCallback(function (event) {\n    if (!open) {\n      dispatch({\n        type: DisclosureActionTypes.Show\n      });\n      onToggle === null || onToggle === void 0 ? void 0 : onToggle(true, event);\n    }\n  }, [open, dispatch, onToggle]);\n  var onMouseOut = useCallback(function (event) {\n    if (open) {\n      dispatch({\n        type: DisclosureActionTypes.Hide\n      });\n      onToggle === null || onToggle === void 0 ? void 0 : onToggle(false, event);\n    }\n  }, [open, dispatch, onToggle]);\n  var contextValue = useMemo(function () {\n    var cascadeDispatch = function cascadeDispatch(action) {\n      var result = dispatch(action);\n\n      if ('cascade' in action) {\n        parentDisclosure === null || parentDisclosure === void 0 ? void 0 : parentDisclosure[1](action);\n      }\n\n      return result;\n    };\n\n    return [{\n      open: open\n    }, cascadeDispatch, {\n      onToggle: onToggle,\n      trigger: trigger\n    }];\n  }, [parentDisclosure, open, dispatch, onToggle, trigger]);\n  var renderProps = useMemo(function () {\n    var renderProps = {\n      open: open\n    };\n\n    if (trigger.includes('mouseover')) {\n      renderProps.onMouseOver = onMouseOver;\n      renderProps.onMouseOut = onMouseOut;\n    }\n\n    return renderProps;\n  }, [open, trigger, onMouseOver, onMouseOut]);\n  return /*#__PURE__*/React.createElement(DisclosureContext.Provider, {\n    value: contextValue\n  }, children(renderProps, containerElementRef));\n});\nDisclosure.Button = DisclosureButton;\nDisclosure.Content = DisclosureContent;\nexport default Disclosure;"]},"metadata":{},"sourceType":"module"}