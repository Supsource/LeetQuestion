{"ast":null,"code":"/**\n * Source code reference from:\n * https://github.com/facebook/fbjs/blob/master/packages/fbjs/src/dom/DOMMouseMoveTracker.js\n */\nimport on from './on';\nimport cancelAnimationFramePolyfill from './cancelAnimationFramePolyfill';\nimport requestAnimationFramePolyfill from './requestAnimationFramePolyfill';\n\nvar DOMMouseMoveTracker = /*#__PURE__*/function () {\n  /**\n   * onMove is the callback that will be called on every mouse move.\n   * onMoveEnd is called on mouse up when movement has ended.\n   */\n  function DOMMouseMoveTracker(onMove, onMoveEnd, domNode) {\n    var _this = this;\n\n    this.isDraggingStatus = false;\n    this.animationFrameID = null;\n    this.domNode = void 0;\n    this.onMove = null;\n    this.onMoveEnd = null;\n    this.eventMoveToken = null;\n    this.eventUpToken = null;\n    this.moveEvent = null;\n    this.deltaX = 0;\n    this.deltaY = 0;\n    this.x = 0;\n    this.y = 0;\n\n    this.isDragging = function () {\n      return _this.isDraggingStatus;\n    };\n\n    this.onMouseMove = function (event) {\n      var x = event.clientX;\n      var y = event.clientY;\n      _this.deltaX += x - _this.x;\n      _this.deltaY += y - _this.y;\n\n      if (_this.animationFrameID === null) {\n        // The mouse may move faster then the animation frame does.\n        // Use `requestAnimationFramePolyfill` to avoid over-updating.\n        _this.animationFrameID = requestAnimationFramePolyfill(_this.didMouseMove);\n      }\n\n      _this.x = x;\n      _this.y = y;\n      _this.moveEvent = event;\n      event.preventDefault();\n    };\n\n    this.didMouseMove = function () {\n      _this.animationFrameID = null;\n\n      _this.onMove(_this.deltaX, _this.deltaY, _this.moveEvent);\n\n      _this.deltaX = 0;\n      _this.deltaY = 0;\n    };\n\n    this.onMouseUp = function (event) {\n      if (_this.animationFrameID) {\n        _this.didMouseMove();\n      }\n\n      _this.onMoveEnd && _this.onMoveEnd(event);\n    };\n\n    this.domNode = domNode;\n    this.onMove = onMove;\n    this.onMoveEnd = onMoveEnd;\n  }\n  /**\n   * This is to set up the listeners for listening to mouse move\n   * and mouse up signaling the movement has ended. Please note that these\n   * listeners are added at the document.body level. It takes in an event\n   * in order to grab inital state.\n   */\n\n\n  var _proto = DOMMouseMoveTracker.prototype;\n\n  _proto.captureMouseMoves = function captureMouseMoves(event) {\n    if (!this.eventMoveToken && !this.eventUpToken) {\n      this.eventMoveToken = on(this.domNode, 'mousemove', this.onMouseMove);\n      this.eventUpToken = on(this.domNode, 'mouseup', this.onMouseUp);\n    }\n\n    if (!this.isDraggingStatus) {\n      this.deltaX = 0;\n      this.deltaY = 0;\n      this.isDraggingStatus = true;\n      this.x = event.clientX;\n      this.y = event.clientY;\n    }\n\n    event.preventDefault();\n  }\n  /**\n   * These releases all of the listeners on document.body.\n   */\n  ;\n\n  _proto.releaseMouseMoves = function releaseMouseMoves() {\n    if (this.eventMoveToken) {\n      this.eventMoveToken.off();\n      this.eventMoveToken = null;\n    }\n\n    if (this.eventUpToken) {\n      this.eventUpToken.off();\n      this.eventUpToken = null;\n    }\n\n    if (this.animationFrameID !== null) {\n      cancelAnimationFramePolyfill(this.animationFrameID);\n      this.animationFrameID = null;\n    }\n\n    if (this.isDraggingStatus) {\n      this.isDraggingStatus = false;\n      this.x = 0;\n      this.y = 0;\n    }\n  }\n  /**\n   * Returns whether or not if the mouse movement is being tracked.\n   */\n  ;\n\n  return DOMMouseMoveTracker;\n}();\n\nexport default DOMMouseMoveTracker;","map":{"version":3,"sources":["/Users/supriyomal/Documents/GitHub/LeetQuestion/node_modules/dom-lib/esm/DOMMouseMoveTracker.js"],"names":["on","cancelAnimationFramePolyfill","requestAnimationFramePolyfill","DOMMouseMoveTracker","onMove","onMoveEnd","domNode","_this","isDraggingStatus","animationFrameID","eventMoveToken","eventUpToken","moveEvent","deltaX","deltaY","x","y","isDragging","onMouseMove","event","clientX","clientY","didMouseMove","preventDefault","onMouseUp","_proto","prototype","captureMouseMoves","releaseMouseMoves","off"],"mappings":"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","sourcesContent":["/**\n * Source code reference from:\n * https://github.com/facebook/fbjs/blob/master/packages/fbjs/src/dom/DOMMouseMoveTracker.js\n */\nimport on from './on';\nimport cancelAnimationFramePolyfill from './cancelAnimationFramePolyfill';\nimport requestAnimationFramePolyfill from './requestAnimationFramePolyfill';\n\nvar DOMMouseMoveTracker = /*#__PURE__*/function () {\n  /**\n   * onMove is the callback that will be called on every mouse move.\n   * onMoveEnd is called on mouse up when movement has ended.\n   */\n  function DOMMouseMoveTracker(onMove, onMoveEnd, domNode) {\n    var _this = this;\n\n    this.isDraggingStatus = false;\n    this.animationFrameID = null;\n    this.domNode = void 0;\n    this.onMove = null;\n    this.onMoveEnd = null;\n    this.eventMoveToken = null;\n    this.eventUpToken = null;\n    this.moveEvent = null;\n    this.deltaX = 0;\n    this.deltaY = 0;\n    this.x = 0;\n    this.y = 0;\n\n    this.isDragging = function () {\n      return _this.isDraggingStatus;\n    };\n\n    this.onMouseMove = function (event) {\n      var x = event.clientX;\n      var y = event.clientY;\n      _this.deltaX += x - _this.x;\n      _this.deltaY += y - _this.y;\n\n      if (_this.animationFrameID === null) {\n        // The mouse may move faster then the animation frame does.\n        // Use `requestAnimationFramePolyfill` to avoid over-updating.\n        _this.animationFrameID = requestAnimationFramePolyfill(_this.didMouseMove);\n      }\n\n      _this.x = x;\n      _this.y = y;\n      _this.moveEvent = event;\n      event.preventDefault();\n    };\n\n    this.didMouseMove = function () {\n      _this.animationFrameID = null;\n\n      _this.onMove(_this.deltaX, _this.deltaY, _this.moveEvent);\n\n      _this.deltaX = 0;\n      _this.deltaY = 0;\n    };\n\n    this.onMouseUp = function (event) {\n      if (_this.animationFrameID) {\n        _this.didMouseMove();\n      }\n\n      _this.onMoveEnd && _this.onMoveEnd(event);\n    };\n\n    this.domNode = domNode;\n    this.onMove = onMove;\n    this.onMoveEnd = onMoveEnd;\n  }\n  /**\n   * This is to set up the listeners for listening to mouse move\n   * and mouse up signaling the movement has ended. Please note that these\n   * listeners are added at the document.body level. It takes in an event\n   * in order to grab inital state.\n   */\n\n\n  var _proto = DOMMouseMoveTracker.prototype;\n\n  _proto.captureMouseMoves = function captureMouseMoves(event) {\n    if (!this.eventMoveToken && !this.eventUpToken) {\n      this.eventMoveToken = on(this.domNode, 'mousemove', this.onMouseMove);\n      this.eventUpToken = on(this.domNode, 'mouseup', this.onMouseUp);\n    }\n\n    if (!this.isDraggingStatus) {\n      this.deltaX = 0;\n      this.deltaY = 0;\n      this.isDraggingStatus = true;\n      this.x = event.clientX;\n      this.y = event.clientY;\n    }\n\n    event.preventDefault();\n  }\n  /**\n   * These releases all of the listeners on document.body.\n   */\n  ;\n\n  _proto.releaseMouseMoves = function releaseMouseMoves() {\n    if (this.eventMoveToken) {\n      this.eventMoveToken.off();\n      this.eventMoveToken = null;\n    }\n\n    if (this.eventUpToken) {\n      this.eventUpToken.off();\n      this.eventUpToken = null;\n    }\n\n    if (this.animationFrameID !== null) {\n      cancelAnimationFramePolyfill(this.animationFrameID);\n      this.animationFrameID = null;\n    }\n\n    if (this.isDraggingStatus) {\n      this.isDraggingStatus = false;\n      this.x = 0;\n      this.y = 0;\n    }\n  }\n  /**\n   * Returns whether or not if the mouse movement is being tracked.\n   */\n  ;\n\n  return DOMMouseMoveTracker;\n}();\n\nexport default DOMMouseMoveTracker;"]},"metadata":{},"sourceType":"module"}