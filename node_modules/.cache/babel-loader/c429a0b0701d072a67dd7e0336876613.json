{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React, { useEffect } from 'react';\nimport { getClassNamePrefix, prefix } from '../utils/prefix';\nimport { addClass, removeClass, canUseDOM } from '../DOMHelper';\nvar CustomContext = /*#__PURE__*/React.createContext({});\nvar Consumer = CustomContext.Consumer,\n    Provider = CustomContext.Provider;\nvar themes = ['light', 'dark', 'high-contrast'];\n\nvar CustomProvider = function CustomProvider(props) {\n  var children = props.children,\n      _props$classPrefix = props.classPrefix,\n      classPrefix = _props$classPrefix === void 0 ? getClassNamePrefix() : _props$classPrefix,\n      theme = props.theme,\n      rest = _objectWithoutPropertiesLoose(props, [\"children\", \"classPrefix\", \"theme\"]);\n\n  var value = React.useMemo(function () {\n    return _extends({\n      classPrefix: classPrefix,\n      theme: theme\n    }, rest);\n  }, [classPrefix, theme, rest]);\n  useEffect(function () {\n    if (canUseDOM && theme) {\n      addClass(document.body, prefix(classPrefix, \"theme-\" + theme)); // Remove the className that will cause style conflicts\n\n      themes.forEach(function (t) {\n        if (t !== theme) {\n          removeClass(document.body, prefix(classPrefix, \"theme-\" + t));\n        }\n      });\n    }\n  }, [classPrefix, theme]);\n  return /*#__PURE__*/React.createElement(Provider, {\n    value: value\n  }, children);\n};\n\nexport { CustomContext, Consumer as CustomConsumer };\nexport default CustomProvider;","map":{"version":3,"sources":["/Users/supriyomal/Documents/GitHub/LeetQuestion/node_modules/rsuite/esm/CustomProvider/CustomProvider.js"],"names":["_extends","_objectWithoutPropertiesLoose","React","useEffect","getClassNamePrefix","prefix","addClass","removeClass","canUseDOM","CustomContext","createContext","Consumer","Provider","themes","CustomProvider","props","children","_props$classPrefix","classPrefix","theme","rest","value","useMemo","document","body","forEach","t","createElement","CustomConsumer"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,oCAArB;AACA,OAAOC,6BAAP,MAA0C,yDAA1C;AACA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,kBAAT,EAA6BC,MAA7B,QAA2C,iBAA3C;AACA,SAASC,QAAT,EAAmBC,WAAnB,EAAgCC,SAAhC,QAAiD,cAAjD;AACA,IAAIC,aAAa,GAAG,aAAaP,KAAK,CAACQ,aAAN,CAAoB,EAApB,CAAjC;AACA,IAAIC,QAAQ,GAAGF,aAAa,CAACE,QAA7B;AAAA,IACIC,QAAQ,GAAGH,aAAa,CAACG,QAD7B;AAEA,IAAIC,MAAM,GAAG,CAAC,OAAD,EAAU,MAAV,EAAkB,eAAlB,CAAb;;AAEA,IAAIC,cAAc,GAAG,SAASA,cAAT,CAAwBC,KAAxB,EAA+B;AAClD,MAAIC,QAAQ,GAAGD,KAAK,CAACC,QAArB;AAAA,MACIC,kBAAkB,GAAGF,KAAK,CAACG,WAD/B;AAAA,MAEIA,WAAW,GAAGD,kBAAkB,KAAK,KAAK,CAA5B,GAAgCb,kBAAkB,EAAlD,GAAuDa,kBAFzE;AAAA,MAGIE,KAAK,GAAGJ,KAAK,CAACI,KAHlB;AAAA,MAIIC,IAAI,GAAGnB,6BAA6B,CAACc,KAAD,EAAQ,CAAC,UAAD,EAAa,aAAb,EAA4B,OAA5B,CAAR,CAJxC;;AAMA,MAAIM,KAAK,GAAGnB,KAAK,CAACoB,OAAN,CAAc,YAAY;AACpC,WAAOtB,QAAQ,CAAC;AACdkB,MAAAA,WAAW,EAAEA,WADC;AAEdC,MAAAA,KAAK,EAAEA;AAFO,KAAD,EAGZC,IAHY,CAAf;AAID,GALW,EAKT,CAACF,WAAD,EAAcC,KAAd,EAAqBC,IAArB,CALS,CAAZ;AAMAjB,EAAAA,SAAS,CAAC,YAAY;AACpB,QAAIK,SAAS,IAAIW,KAAjB,EAAwB;AACtBb,MAAAA,QAAQ,CAACiB,QAAQ,CAACC,IAAV,EAAgBnB,MAAM,CAACa,WAAD,EAAc,WAAWC,KAAzB,CAAtB,CAAR,CADsB,CAC0C;;AAEhEN,MAAAA,MAAM,CAACY,OAAP,CAAe,UAAUC,CAAV,EAAa;AAC1B,YAAIA,CAAC,KAAKP,KAAV,EAAiB;AACfZ,UAAAA,WAAW,CAACgB,QAAQ,CAACC,IAAV,EAAgBnB,MAAM,CAACa,WAAD,EAAc,WAAWQ,CAAzB,CAAtB,CAAX;AACD;AACF,OAJD;AAKD;AACF,GAVQ,EAUN,CAACR,WAAD,EAAcC,KAAd,CAVM,CAAT;AAWA,SAAO,aAAajB,KAAK,CAACyB,aAAN,CAAoBf,QAApB,EAA8B;AAChDS,IAAAA,KAAK,EAAEA;AADyC,GAA9B,EAEjBL,QAFiB,CAApB;AAGD,CA3BD;;AA6BA,SAASP,aAAT,EAAwBE,QAAQ,IAAIiB,cAApC;AACA,eAAed,cAAf","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React, { useEffect } from 'react';\nimport { getClassNamePrefix, prefix } from '../utils/prefix';\nimport { addClass, removeClass, canUseDOM } from '../DOMHelper';\nvar CustomContext = /*#__PURE__*/React.createContext({});\nvar Consumer = CustomContext.Consumer,\n    Provider = CustomContext.Provider;\nvar themes = ['light', 'dark', 'high-contrast'];\n\nvar CustomProvider = function CustomProvider(props) {\n  var children = props.children,\n      _props$classPrefix = props.classPrefix,\n      classPrefix = _props$classPrefix === void 0 ? getClassNamePrefix() : _props$classPrefix,\n      theme = props.theme,\n      rest = _objectWithoutPropertiesLoose(props, [\"children\", \"classPrefix\", \"theme\"]);\n\n  var value = React.useMemo(function () {\n    return _extends({\n      classPrefix: classPrefix,\n      theme: theme\n    }, rest);\n  }, [classPrefix, theme, rest]);\n  useEffect(function () {\n    if (canUseDOM && theme) {\n      addClass(document.body, prefix(classPrefix, \"theme-\" + theme)); // Remove the className that will cause style conflicts\n\n      themes.forEach(function (t) {\n        if (t !== theme) {\n          removeClass(document.body, prefix(classPrefix, \"theme-\" + t));\n        }\n      });\n    }\n  }, [classPrefix, theme]);\n  return /*#__PURE__*/React.createElement(Provider, {\n    value: value\n  }, children);\n};\n\nexport { CustomContext, Consumer as CustomConsumer };\nexport default CustomProvider;"]},"metadata":{},"sourceType":"module"}