{"ast":null,"code":"import { useCallback, useRef } from 'react';\nimport addStyle from 'dom-lib/addStyle';\nimport { SCROLLBAR_WIDTH } from '../constants';\nimport toggleClass from './toggleClass';\nimport useUpdateEffect from './useUpdateEffect';\nimport isSupportTouchEvent from './isSupportTouchEvent';\n/**\n * Update the position of the table according to the scrolling information of the table.\n * @param props\n * @returns\n */\n\nvar usePosition = function usePosition(props) {\n  var data = props.data,\n      height = props.height,\n      tableWidth = props.tableWidth,\n      tableRef = props.tableRef,\n      prefix = props.prefix,\n      translateDOMPositionXY = props.translateDOMPositionXY,\n      wheelWrapperRef = props.wheelWrapperRef,\n      headerWrapperRef = props.headerWrapperRef,\n      affixHeaderWrapperRef = props.affixHeaderWrapperRef,\n      tableHeaderRef = props.tableHeaderRef,\n      scrollX = props.scrollX,\n      scrollY = props.scrollY,\n      contentWidth = props.contentWidth,\n      shouldFixedColumn = props.shouldFixedColumn;\n  var duration = useRef(0);\n  var bezier = useRef('linear');\n  var getScrollCellGroups = useCallback(function () {\n    var _tableRef$current;\n\n    return ((_tableRef$current = tableRef.current) === null || _tableRef$current === void 0 ? void 0 : _tableRef$current.querySelectorAll(\".\" + prefix('cell-group-scroll'))) || [];\n  }, [prefix, tableRef]);\n  var getFixedLeftCellGroups = useCallback(function () {\n    var _tableRef$current2;\n\n    return (_tableRef$current2 = tableRef.current) === null || _tableRef$current2 === void 0 ? void 0 : _tableRef$current2.querySelectorAll(\".\" + prefix('cell-group-fixed-left'));\n  }, [prefix, tableRef]);\n  var getFixedRightCellGroups = useCallback(function () {\n    var _tableRef$current3;\n\n    return (_tableRef$current3 = tableRef.current) === null || _tableRef$current3 === void 0 ? void 0 : _tableRef$current3.querySelectorAll(\".\" + prefix('cell-group-fixed-right'));\n  }, [prefix, tableRef]);\n  var updateWheelElementPosition = useCallback(function (fixedCell) {\n    if (wheelWrapperRef !== null && wheelWrapperRef !== void 0 && wheelWrapperRef.current) {\n      // The animation when the mobile device touches and scrolls.\n      var wheelStyle = isSupportTouchEvent() ? {\n        'transition-duration': duration.current + \"ms\",\n        'transition-timing-function': bezier.current\n      } : {};\n      translateDOMPositionXY.current(wheelStyle, fixedCell ? 0 : scrollX.current, scrollY.current);\n      addStyle(wheelWrapperRef.current, wheelStyle);\n    }\n  }, [scrollX, scrollY, translateDOMPositionXY, wheelWrapperRef]);\n  var updatePositionByFixedCell = useCallback(function () {\n    var wheelGroupStyle = {};\n    var scrollGroups = getScrollCellGroups();\n    var fixedLeftGroups = getFixedLeftCellGroups();\n    var fixedRightGroups = getFixedRightCellGroups();\n    translateDOMPositionXY.current(wheelGroupStyle, scrollX.current, 0);\n    var scrollArrayGroups = Array.from(scrollGroups);\n\n    for (var i = 0; i < scrollArrayGroups.length; i++) {\n      var group = scrollArrayGroups[i];\n      addStyle(group, wheelGroupStyle);\n    }\n\n    updateWheelElementPosition(true);\n    var leftShadowClassName = prefix('cell-group-left-shadow');\n    var rightShadowClassName = prefix('cell-group-right-shadow');\n    var showLeftShadow = scrollX.current < 0;\n    var showRightShadow = tableWidth.current - contentWidth.current - SCROLLBAR_WIDTH !== scrollX.current;\n    toggleClass(fixedLeftGroups, leftShadowClassName, showLeftShadow);\n    toggleClass(fixedRightGroups, rightShadowClassName, showRightShadow);\n  }, [contentWidth, getFixedLeftCellGroups, getFixedRightCellGroups, getScrollCellGroups, updateWheelElementPosition, prefix, scrollX, tableWidth, translateDOMPositionXY]);\n  /**\n   * Update the position of the table according to the scrolling information of the table.\n   * @param nextDuration CSS transition-duration\n   * @param nextBezier CSS transition-timing-function\n   */\n\n  var updatePosition = useCallback(function (nextDuration, nextBezier) {\n    if (nextDuration) {\n      duration.current = nextDuration;\n    }\n\n    if (nextBezier) {\n      bezier.current = nextBezier;\n    } // When there are fixed columns.\n\n\n    if (shouldFixedColumn) {\n      updatePositionByFixedCell();\n    } else {\n      var _affixHeaderElement$h;\n\n      var headerStyle = {};\n      translateDOMPositionXY.current(headerStyle, scrollX.current, 0);\n      var headerElement = headerWrapperRef === null || headerWrapperRef === void 0 ? void 0 : headerWrapperRef.current;\n      var affixHeaderElement = affixHeaderWrapperRef === null || affixHeaderWrapperRef === void 0 ? void 0 : affixHeaderWrapperRef.current;\n      updateWheelElementPosition();\n      headerElement && addStyle(headerElement, headerStyle);\n\n      if (affixHeaderElement !== null && affixHeaderElement !== void 0 && (_affixHeaderElement$h = affixHeaderElement.hasChildNodes) !== null && _affixHeaderElement$h !== void 0 && _affixHeaderElement$h.call(affixHeaderElement)) {\n        addStyle(affixHeaderElement === null || affixHeaderElement === void 0 ? void 0 : affixHeaderElement.firstChild, headerStyle);\n      }\n    }\n\n    if (tableHeaderRef !== null && tableHeaderRef !== void 0 && tableHeaderRef.current) {\n      toggleClass(tableHeaderRef.current, prefix('cell-group-shadow'), scrollY.current < 0);\n    }\n  }, [affixHeaderWrapperRef, updateWheelElementPosition, headerWrapperRef, prefix, scrollX, scrollY, shouldFixedColumn, tableHeaderRef, translateDOMPositionXY, updatePositionByFixedCell]);\n  useUpdateEffect(function () {\n    if (scrollY.current !== 0) {\n      updatePosition();\n    }\n  }, [height, data]);\n  return {\n    forceUpdatePosition: updatePosition\n  };\n};\n\nexport default usePosition;","map":{"version":3,"sources":["/Users/supriyomal/Documents/GitHub/LeetQuestion/node_modules/rsuite-table/es/utils/usePosition.js"],"names":["useCallback","useRef","addStyle","SCROLLBAR_WIDTH","toggleClass","useUpdateEffect","isSupportTouchEvent","usePosition","props","data","height","tableWidth","tableRef","prefix","translateDOMPositionXY","wheelWrapperRef","headerWrapperRef","affixHeaderWrapperRef","tableHeaderRef","scrollX","scrollY","contentWidth","shouldFixedColumn","duration","bezier","getScrollCellGroups","_tableRef$current","current","querySelectorAll","getFixedLeftCellGroups","_tableRef$current2","getFixedRightCellGroups","_tableRef$current3","updateWheelElementPosition","fixedCell","wheelStyle","updatePositionByFixedCell","wheelGroupStyle","scrollGroups","fixedLeftGroups","fixedRightGroups","scrollArrayGroups","Array","from","i","length","group","leftShadowClassName","rightShadowClassName","showLeftShadow","showRightShadow","updatePosition","nextDuration","nextBezier","_affixHeaderElement$h","headerStyle","headerElement","affixHeaderElement","hasChildNodes","call","firstChild","forceUpdatePosition"],"mappings":"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","sourcesContent":["import { useCallback, useRef } from 'react';\nimport addStyle from 'dom-lib/addStyle';\nimport { SCROLLBAR_WIDTH } from '../constants';\nimport toggleClass from './toggleClass';\nimport useUpdateEffect from './useUpdateEffect';\nimport isSupportTouchEvent from './isSupportTouchEvent';\n\n/**\n * Update the position of the table according to the scrolling information of the table.\n * @param props\n * @returns\n */\nvar usePosition = function usePosition(props) {\n  var data = props.data,\n      height = props.height,\n      tableWidth = props.tableWidth,\n      tableRef = props.tableRef,\n      prefix = props.prefix,\n      translateDOMPositionXY = props.translateDOMPositionXY,\n      wheelWrapperRef = props.wheelWrapperRef,\n      headerWrapperRef = props.headerWrapperRef,\n      affixHeaderWrapperRef = props.affixHeaderWrapperRef,\n      tableHeaderRef = props.tableHeaderRef,\n      scrollX = props.scrollX,\n      scrollY = props.scrollY,\n      contentWidth = props.contentWidth,\n      shouldFixedColumn = props.shouldFixedColumn;\n  var duration = useRef(0);\n  var bezier = useRef('linear');\n  var getScrollCellGroups = useCallback(function () {\n    var _tableRef$current;\n\n    return ((_tableRef$current = tableRef.current) === null || _tableRef$current === void 0 ? void 0 : _tableRef$current.querySelectorAll(\".\" + prefix('cell-group-scroll'))) || [];\n  }, [prefix, tableRef]);\n  var getFixedLeftCellGroups = useCallback(function () {\n    var _tableRef$current2;\n\n    return (_tableRef$current2 = tableRef.current) === null || _tableRef$current2 === void 0 ? void 0 : _tableRef$current2.querySelectorAll(\".\" + prefix('cell-group-fixed-left'));\n  }, [prefix, tableRef]);\n  var getFixedRightCellGroups = useCallback(function () {\n    var _tableRef$current3;\n\n    return (_tableRef$current3 = tableRef.current) === null || _tableRef$current3 === void 0 ? void 0 : _tableRef$current3.querySelectorAll(\".\" + prefix('cell-group-fixed-right'));\n  }, [prefix, tableRef]);\n  var updateWheelElementPosition = useCallback(function (fixedCell) {\n    if (wheelWrapperRef !== null && wheelWrapperRef !== void 0 && wheelWrapperRef.current) {\n      // The animation when the mobile device touches and scrolls.\n      var wheelStyle = isSupportTouchEvent() ? {\n        'transition-duration': duration.current + \"ms\",\n        'transition-timing-function': bezier.current\n      } : {};\n      translateDOMPositionXY.current(wheelStyle, fixedCell ? 0 : scrollX.current, scrollY.current);\n      addStyle(wheelWrapperRef.current, wheelStyle);\n    }\n  }, [scrollX, scrollY, translateDOMPositionXY, wheelWrapperRef]);\n  var updatePositionByFixedCell = useCallback(function () {\n    var wheelGroupStyle = {};\n    var scrollGroups = getScrollCellGroups();\n    var fixedLeftGroups = getFixedLeftCellGroups();\n    var fixedRightGroups = getFixedRightCellGroups();\n    translateDOMPositionXY.current(wheelGroupStyle, scrollX.current, 0);\n    var scrollArrayGroups = Array.from(scrollGroups);\n\n    for (var i = 0; i < scrollArrayGroups.length; i++) {\n      var group = scrollArrayGroups[i];\n      addStyle(group, wheelGroupStyle);\n    }\n\n    updateWheelElementPosition(true);\n    var leftShadowClassName = prefix('cell-group-left-shadow');\n    var rightShadowClassName = prefix('cell-group-right-shadow');\n    var showLeftShadow = scrollX.current < 0;\n    var showRightShadow = tableWidth.current - contentWidth.current - SCROLLBAR_WIDTH !== scrollX.current;\n    toggleClass(fixedLeftGroups, leftShadowClassName, showLeftShadow);\n    toggleClass(fixedRightGroups, rightShadowClassName, showRightShadow);\n  }, [contentWidth, getFixedLeftCellGroups, getFixedRightCellGroups, getScrollCellGroups, updateWheelElementPosition, prefix, scrollX, tableWidth, translateDOMPositionXY]);\n  /**\n   * Update the position of the table according to the scrolling information of the table.\n   * @param nextDuration CSS transition-duration\n   * @param nextBezier CSS transition-timing-function\n   */\n\n  var updatePosition = useCallback(function (nextDuration, nextBezier) {\n    if (nextDuration) {\n      duration.current = nextDuration;\n    }\n\n    if (nextBezier) {\n      bezier.current = nextBezier;\n    } // When there are fixed columns.\n\n\n    if (shouldFixedColumn) {\n      updatePositionByFixedCell();\n    } else {\n      var _affixHeaderElement$h;\n\n      var headerStyle = {};\n      translateDOMPositionXY.current(headerStyle, scrollX.current, 0);\n      var headerElement = headerWrapperRef === null || headerWrapperRef === void 0 ? void 0 : headerWrapperRef.current;\n      var affixHeaderElement = affixHeaderWrapperRef === null || affixHeaderWrapperRef === void 0 ? void 0 : affixHeaderWrapperRef.current;\n      updateWheelElementPosition();\n      headerElement && addStyle(headerElement, headerStyle);\n\n      if (affixHeaderElement !== null && affixHeaderElement !== void 0 && (_affixHeaderElement$h = affixHeaderElement.hasChildNodes) !== null && _affixHeaderElement$h !== void 0 && _affixHeaderElement$h.call(affixHeaderElement)) {\n        addStyle(affixHeaderElement === null || affixHeaderElement === void 0 ? void 0 : affixHeaderElement.firstChild, headerStyle);\n      }\n    }\n\n    if (tableHeaderRef !== null && tableHeaderRef !== void 0 && tableHeaderRef.current) {\n      toggleClass(tableHeaderRef.current, prefix('cell-group-shadow'), scrollY.current < 0);\n    }\n  }, [affixHeaderWrapperRef, updateWheelElementPosition, headerWrapperRef, prefix, scrollX, scrollY, shouldFixedColumn, tableHeaderRef, translateDOMPositionXY, updatePositionByFixedCell]);\n  useUpdateEffect(function () {\n    if (scrollY.current !== 0) {\n      updatePosition();\n    }\n  }, [height, data]);\n  return {\n    forceUpdatePosition: updatePosition\n  };\n};\n\nexport default usePosition;"]},"metadata":{},"sourceType":"module"}