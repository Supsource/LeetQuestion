{"ast":null,"code":"import { useCallback, useContext, useEffect, useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport isNil from 'lodash/isNil';\nimport useUniqueId from '../utils/useUniqueId';\nimport MenuContext, { MenuActionTypes, MoveFocusTo } from './MenuContext';\n/**\n * Headless ARIA `menuitem`\n */\n\nfunction MenuItem(props) {\n  var children = props.children,\n      _props$selected = props.selected,\n      selected = _props$selected === void 0 ? false : _props$selected,\n      _props$disabled = props.disabled,\n      disabled = _props$disabled === void 0 ? false : _props$disabled,\n      onActivate = props.onActivate;\n  var menuitemRef = useRef(null);\n  var menuitemId = useUniqueId('menuitem-');\n  var menu = useContext(MenuContext);\n\n  if (!menu) {\n    throw new Error('<MenuItem> must be rendered within a <Menu>');\n  }\n\n  var menuState = menu[0],\n      dispatch = menu[1]; // Whether this menuitem has focus (indicated by `aria-activedescendant` from parent menu)\n\n  var hasFocus = !isNil(menuitemRef.current) && !isNil(menuState.activeItemIndex) && menuState.items[menuState.activeItemIndex].element === menuitemRef.current;\n  var handleClick = useCallback(function (event) {\n    if (disabled) {\n      return;\n    }\n\n    onActivate === null || onActivate === void 0 ? void 0 : onActivate(event);\n  }, [disabled, onActivate]); // Gain/release focus on mousedown in `menubar`\n\n  var handleMouseDown = useCallback(function () {\n    if (!isNil(menuitemRef.current) && !hasFocus) {\n      dispatch({\n        type: MenuActionTypes.MoveFocus,\n        to: MoveFocusTo.Specific,\n        id: menuitemRef.current.id\n      });\n    }\n  }, [dispatch, hasFocus]); // Gain/release focus on mouseenter/mouseleave in `menu`\n\n  var handleMouseMove = useCallback(function () {\n    if (!isNil(menuitemRef.current) && !hasFocus) {\n      dispatch({\n        type: MenuActionTypes.MoveFocus,\n        to: MoveFocusTo.Specific,\n        id: menuitemRef.current.id\n      });\n    }\n  }, [hasFocus, dispatch]);\n  var handleMouseLeave = useCallback(function () {\n    dispatch({\n      type: MenuActionTypes.MoveFocus,\n      to: MoveFocusTo.None\n    });\n  }, [dispatch]);\n  useEffect(function () {\n    var menuitemElement = menuitemRef.current;\n\n    if (menuitemElement) {\n      dispatch({\n        type: MenuActionTypes.RegisterItem,\n        element: menuitemElement,\n        props: {\n          disabled: disabled\n        }\n      });\n      return function () {\n        dispatch({\n          type: MenuActionTypes.UnregisterItem,\n          id: menuitemElement.id\n        });\n      };\n    }\n  }, [menuitemRef, disabled, dispatch]);\n  var menuitemProps = {\n    id: menuitemId,\n    role: 'menuitem',\n    // fixme Only use `aria-checked` on menuitemradio and menuitemcheckbox\n    'aria-checked': selected || undefined,\n    'aria-disabled': disabled,\n    tabIndex: -1,\n    onClick: handleClick,\n    // render props\n    selected: selected,\n    active: hasFocus\n  }; // Only move focus on hover in a `menu`, not `menubar`\n\n  if ((menuState === null || menuState === void 0 ? void 0 : menuState.role) === 'menu') {\n    menuitemProps.onMouseMove = handleMouseMove;\n    menuitemProps.onMouseLeave = handleMouseLeave;\n  }\n\n  if ((menuState === null || menuState === void 0 ? void 0 : menuState.role) === 'menubar') {\n    menuitemProps.onMouseDown = handleMouseDown;\n  }\n\n  return children(menuitemProps, menuitemRef);\n}\n\nMenuItem.displayName = 'MenuItem';\nMenuItem.propTypes = {\n  selected: PropTypes.bool,\n  disabled: PropTypes.bool,\n  children: PropTypes.func.isRequired,\n  onActivate: PropTypes.func\n};\nexport default MenuItem;","map":{"version":3,"sources":["/Users/supriyomal/Documents/GitHub/LeetQuestion/node_modules/rsuite/esm/Menu/MenuItem.js"],"names":["useCallback","useContext","useEffect","useRef","PropTypes","isNil","useUniqueId","MenuContext","MenuActionTypes","MoveFocusTo","MenuItem","props","children","_props$selected","selected","_props$disabled","disabled","onActivate","menuitemRef","menuitemId","menu","Error","menuState","dispatch","hasFocus","current","activeItemIndex","items","element","handleClick","event","handleMouseDown","type","MoveFocus","to","Specific","id","handleMouseMove","handleMouseLeave","None","menuitemElement","RegisterItem","UnregisterItem","menuitemProps","role","undefined","tabIndex","onClick","active","onMouseMove","onMouseLeave","onMouseDown","displayName","propTypes","bool","func","isRequired"],"mappings":"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","sourcesContent":["import { useCallback, useContext, useEffect, useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport isNil from 'lodash/isNil';\nimport useUniqueId from '../utils/useUniqueId';\nimport MenuContext, { MenuActionTypes, MoveFocusTo } from './MenuContext';\n\n/**\n * Headless ARIA `menuitem`\n */\nfunction MenuItem(props) {\n  var children = props.children,\n      _props$selected = props.selected,\n      selected = _props$selected === void 0 ? false : _props$selected,\n      _props$disabled = props.disabled,\n      disabled = _props$disabled === void 0 ? false : _props$disabled,\n      onActivate = props.onActivate;\n  var menuitemRef = useRef(null);\n  var menuitemId = useUniqueId('menuitem-');\n  var menu = useContext(MenuContext);\n\n  if (!menu) {\n    throw new Error('<MenuItem> must be rendered within a <Menu>');\n  }\n\n  var menuState = menu[0],\n      dispatch = menu[1]; // Whether this menuitem has focus (indicated by `aria-activedescendant` from parent menu)\n\n  var hasFocus = !isNil(menuitemRef.current) && !isNil(menuState.activeItemIndex) && menuState.items[menuState.activeItemIndex].element === menuitemRef.current;\n  var handleClick = useCallback(function (event) {\n    if (disabled) {\n      return;\n    }\n\n    onActivate === null || onActivate === void 0 ? void 0 : onActivate(event);\n  }, [disabled, onActivate]); // Gain/release focus on mousedown in `menubar`\n\n  var handleMouseDown = useCallback(function () {\n    if (!isNil(menuitemRef.current) && !hasFocus) {\n      dispatch({\n        type: MenuActionTypes.MoveFocus,\n        to: MoveFocusTo.Specific,\n        id: menuitemRef.current.id\n      });\n    }\n  }, [dispatch, hasFocus]); // Gain/release focus on mouseenter/mouseleave in `menu`\n\n  var handleMouseMove = useCallback(function () {\n    if (!isNil(menuitemRef.current) && !hasFocus) {\n      dispatch({\n        type: MenuActionTypes.MoveFocus,\n        to: MoveFocusTo.Specific,\n        id: menuitemRef.current.id\n      });\n    }\n  }, [hasFocus, dispatch]);\n  var handleMouseLeave = useCallback(function () {\n    dispatch({\n      type: MenuActionTypes.MoveFocus,\n      to: MoveFocusTo.None\n    });\n  }, [dispatch]);\n  useEffect(function () {\n    var menuitemElement = menuitemRef.current;\n\n    if (menuitemElement) {\n      dispatch({\n        type: MenuActionTypes.RegisterItem,\n        element: menuitemElement,\n        props: {\n          disabled: disabled\n        }\n      });\n      return function () {\n        dispatch({\n          type: MenuActionTypes.UnregisterItem,\n          id: menuitemElement.id\n        });\n      };\n    }\n  }, [menuitemRef, disabled, dispatch]);\n  var menuitemProps = {\n    id: menuitemId,\n    role: 'menuitem',\n    // fixme Only use `aria-checked` on menuitemradio and menuitemcheckbox\n    'aria-checked': selected || undefined,\n    'aria-disabled': disabled,\n    tabIndex: -1,\n    onClick: handleClick,\n    // render props\n    selected: selected,\n    active: hasFocus\n  }; // Only move focus on hover in a `menu`, not `menubar`\n\n  if ((menuState === null || menuState === void 0 ? void 0 : menuState.role) === 'menu') {\n    menuitemProps.onMouseMove = handleMouseMove;\n    menuitemProps.onMouseLeave = handleMouseLeave;\n  }\n\n  if ((menuState === null || menuState === void 0 ? void 0 : menuState.role) === 'menubar') {\n    menuitemProps.onMouseDown = handleMouseDown;\n  }\n\n  return children(menuitemProps, menuitemRef);\n}\n\nMenuItem.displayName = 'MenuItem';\nMenuItem.propTypes = {\n  selected: PropTypes.bool,\n  disabled: PropTypes.bool,\n  children: PropTypes.func.isRequired,\n  onActivate: PropTypes.func\n};\nexport default MenuItem;"]},"metadata":{},"sourceType":"module"}