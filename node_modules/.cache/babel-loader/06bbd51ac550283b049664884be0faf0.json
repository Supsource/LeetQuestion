{"ast":null,"code":"import { useCallback, useRef } from 'react';\nimport { DisclosureActionTypes } from './DisclosureContext';\nimport { KEY_VALUES } from '../utils';\nimport useDisclosureContext from './useDisclosureContext';\n\nfunction DisclosureButton(props) {\n  var children = props.children;\n  var buttonRef = useRef(null);\n\n  var _useDisclosureContext = useDisclosureContext(DisclosureButton.displayName),\n      open = _useDisclosureContext[0].open,\n      dispatch = _useDisclosureContext[1],\n      onToggle = _useDisclosureContext[2].onToggle;\n\n  var toggle = useCallback(function (event) {\n    if (!open) {\n      dispatch({\n        type: DisclosureActionTypes.Show\n      });\n      onToggle === null || onToggle === void 0 ? void 0 : onToggle(true, event);\n    } else {\n      dispatch({\n        type: DisclosureActionTypes.Hide\n      });\n      onToggle === null || onToggle === void 0 ? void 0 : onToggle(false, event);\n    }\n  }, [open, dispatch, onToggle]);\n  var onClick = useCallback(function (event) {\n    toggle(event);\n  }, [toggle]);\n  var onKeyDown = useCallback(function (event) {\n    switch (event.key) {\n      case KEY_VALUES.ENTER:\n      case KEY_VALUES.SPACE:\n        event.preventDefault();\n        event.stopPropagation();\n        toggle(event);\n        break;\n    }\n  }, [toggle]);\n  return children({\n    role: 'button',\n    'aria-expanded': open,\n    onClick: onClick,\n    onKeyDown: onKeyDown,\n    open: open\n  }, buttonRef);\n}\n\nDisclosureButton.displayName = 'Disclosure.Button';\nexport default DisclosureButton;","map":{"version":3,"sources":["/Users/supriyomal/Documents/GitHub/LeetQuestion/node_modules/rsuite/esm/Disclosure/DisclosureButton.js"],"names":["useCallback","useRef","DisclosureActionTypes","KEY_VALUES","useDisclosureContext","DisclosureButton","props","children","buttonRef","_useDisclosureContext","displayName","open","dispatch","onToggle","toggle","event","type","Show","Hide","onClick","onKeyDown","key","ENTER","SPACE","preventDefault","stopPropagation","role"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,MAAtB,QAAoC,OAApC;AACA,SAASC,qBAAT,QAAsC,qBAAtC;AACA,SAASC,UAAT,QAA2B,UAA3B;AACA,OAAOC,oBAAP,MAAiC,wBAAjC;;AAEA,SAASC,gBAAT,CAA0BC,KAA1B,EAAiC;AAC/B,MAAIC,QAAQ,GAAGD,KAAK,CAACC,QAArB;AACA,MAAIC,SAAS,GAAGP,MAAM,CAAC,IAAD,CAAtB;;AAEA,MAAIQ,qBAAqB,GAAGL,oBAAoB,CAACC,gBAAgB,CAACK,WAAlB,CAAhD;AAAA,MACIC,IAAI,GAAGF,qBAAqB,CAAC,CAAD,CAArB,CAAyBE,IADpC;AAAA,MAEIC,QAAQ,GAAGH,qBAAqB,CAAC,CAAD,CAFpC;AAAA,MAGII,QAAQ,GAAGJ,qBAAqB,CAAC,CAAD,CAArB,CAAyBI,QAHxC;;AAKA,MAAIC,MAAM,GAAGd,WAAW,CAAC,UAAUe,KAAV,EAAiB;AACxC,QAAI,CAACJ,IAAL,EAAW;AACTC,MAAAA,QAAQ,CAAC;AACPI,QAAAA,IAAI,EAAEd,qBAAqB,CAACe;AADrB,OAAD,CAAR;AAGAJ,MAAAA,QAAQ,KAAK,IAAb,IAAqBA,QAAQ,KAAK,KAAK,CAAvC,GAA2C,KAAK,CAAhD,GAAoDA,QAAQ,CAAC,IAAD,EAAOE,KAAP,CAA5D;AACD,KALD,MAKO;AACLH,MAAAA,QAAQ,CAAC;AACPI,QAAAA,IAAI,EAAEd,qBAAqB,CAACgB;AADrB,OAAD,CAAR;AAGAL,MAAAA,QAAQ,KAAK,IAAb,IAAqBA,QAAQ,KAAK,KAAK,CAAvC,GAA2C,KAAK,CAAhD,GAAoDA,QAAQ,CAAC,KAAD,EAAQE,KAAR,CAA5D;AACD;AACF,GAZuB,EAYrB,CAACJ,IAAD,EAAOC,QAAP,EAAiBC,QAAjB,CAZqB,CAAxB;AAaA,MAAIM,OAAO,GAAGnB,WAAW,CAAC,UAAUe,KAAV,EAAiB;AACzCD,IAAAA,MAAM,CAACC,KAAD,CAAN;AACD,GAFwB,EAEtB,CAACD,MAAD,CAFsB,CAAzB;AAGA,MAAIM,SAAS,GAAGpB,WAAW,CAAC,UAAUe,KAAV,EAAiB;AAC3C,YAAQA,KAAK,CAACM,GAAd;AACE,WAAKlB,UAAU,CAACmB,KAAhB;AACA,WAAKnB,UAAU,CAACoB,KAAhB;AACER,QAAAA,KAAK,CAACS,cAAN;AACAT,QAAAA,KAAK,CAACU,eAAN;AACAX,QAAAA,MAAM,CAACC,KAAD,CAAN;AACA;AANJ;AAQD,GAT0B,EASxB,CAACD,MAAD,CATwB,CAA3B;AAUA,SAAOP,QAAQ,CAAC;AACdmB,IAAAA,IAAI,EAAE,QADQ;AAEd,qBAAiBf,IAFH;AAGdQ,IAAAA,OAAO,EAAEA,OAHK;AAIdC,IAAAA,SAAS,EAAEA,SAJG;AAKdT,IAAAA,IAAI,EAAEA;AALQ,GAAD,EAMZH,SANY,CAAf;AAOD;;AAEDH,gBAAgB,CAACK,WAAjB,GAA+B,mBAA/B;AACA,eAAeL,gBAAf","sourcesContent":["import { useCallback, useRef } from 'react';\nimport { DisclosureActionTypes } from './DisclosureContext';\nimport { KEY_VALUES } from '../utils';\nimport useDisclosureContext from './useDisclosureContext';\n\nfunction DisclosureButton(props) {\n  var children = props.children;\n  var buttonRef = useRef(null);\n\n  var _useDisclosureContext = useDisclosureContext(DisclosureButton.displayName),\n      open = _useDisclosureContext[0].open,\n      dispatch = _useDisclosureContext[1],\n      onToggle = _useDisclosureContext[2].onToggle;\n\n  var toggle = useCallback(function (event) {\n    if (!open) {\n      dispatch({\n        type: DisclosureActionTypes.Show\n      });\n      onToggle === null || onToggle === void 0 ? void 0 : onToggle(true, event);\n    } else {\n      dispatch({\n        type: DisclosureActionTypes.Hide\n      });\n      onToggle === null || onToggle === void 0 ? void 0 : onToggle(false, event);\n    }\n  }, [open, dispatch, onToggle]);\n  var onClick = useCallback(function (event) {\n    toggle(event);\n  }, [toggle]);\n  var onKeyDown = useCallback(function (event) {\n    switch (event.key) {\n      case KEY_VALUES.ENTER:\n      case KEY_VALUES.SPACE:\n        event.preventDefault();\n        event.stopPropagation();\n        toggle(event);\n        break;\n    }\n  }, [toggle]);\n  return children({\n    role: 'button',\n    'aria-expanded': open,\n    onClick: onClick,\n    onKeyDown: onKeyDown,\n    open: open\n  }, buttonRef);\n}\n\nDisclosureButton.displayName = 'Disclosure.Button';\nexport default DisclosureButton;"]},"metadata":{},"sourceType":"module"}