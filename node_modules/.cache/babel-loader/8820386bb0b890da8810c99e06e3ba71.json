{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport getOffsetParent from './getOffsetParent';\nimport getOffset from './getOffset';\nimport getStyle from './getStyle';\nimport scrollTop from './scrollTop';\nimport scrollLeft from './scrollLeft';\nimport nodeName from './nodeName';\nexport default (function (node, offsetParent, calcMargin) {\n  if (calcMargin === void 0) {\n    calcMargin = true;\n  }\n\n  var parentOffset = {\n    top: 0,\n    left: 0\n  };\n  var offset = null; // Fixed elements are offset from window (parentOffset = {top:0, left: 0},\n  // because it is its only offset parent\n\n  if (getStyle(node, 'position') === 'fixed') {\n    offset = node.getBoundingClientRect();\n  } else {\n    offsetParent = offsetParent || getOffsetParent(node);\n    offset = getOffset(node);\n\n    if (nodeName(offsetParent) !== 'html') {\n      var nextParentOffset = getOffset(offsetParent);\n\n      if (nextParentOffset) {\n        parentOffset.top = nextParentOffset.top;\n        parentOffset.left = nextParentOffset.left;\n      }\n    }\n\n    parentOffset.top += parseInt(getStyle(offsetParent, 'borderTopWidth'), 10) - scrollTop(offsetParent) || 0;\n    parentOffset.left += parseInt(getStyle(offsetParent, 'borderLeftWidth'), 10) - scrollLeft(offsetParent) || 0;\n  } // Subtract parent offsets and node margins\n\n\n  if (offset) {\n    var marginTop = calcMargin ? parseInt(getStyle(node, 'marginTop'), 10) || 0 : 0;\n    var marginLeft = calcMargin ? parseInt(getStyle(node, 'marginLeft'), 10) || 0 : 0;\n    return _extends({}, offset, {\n      top: offset.top - parentOffset.top - marginTop,\n      left: offset.left - parentOffset.left - marginLeft\n    });\n  }\n\n  return null;\n});","map":{"version":3,"sources":["/Users/supriyomal/Desktop/hekors-website-main/node_modules/dom-lib/esm/getPosition.js"],"names":["_extends","getOffsetParent","getOffset","getStyle","scrollTop","scrollLeft","nodeName","node","offsetParent","calcMargin","parentOffset","top","left","offset","getBoundingClientRect","nextParentOffset","parseInt","marginTop","marginLeft"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,oCAArB;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,gBAAgB,UAAUC,IAAV,EAAgBC,YAAhB,EAA8BC,UAA9B,EAA0C;AACxD,MAAIA,UAAU,KAAK,KAAK,CAAxB,EAA2B;AACzBA,IAAAA,UAAU,GAAG,IAAb;AACD;;AAED,MAAIC,YAAY,GAAG;AACjBC,IAAAA,GAAG,EAAE,CADY;AAEjBC,IAAAA,IAAI,EAAE;AAFW,GAAnB;AAIA,MAAIC,MAAM,GAAG,IAAb,CATwD,CASrC;AACnB;;AAEA,MAAIV,QAAQ,CAACI,IAAD,EAAO,UAAP,CAAR,KAA+B,OAAnC,EAA4C;AAC1CM,IAAAA,MAAM,GAAGN,IAAI,CAACO,qBAAL,EAAT;AACD,GAFD,MAEO;AACLN,IAAAA,YAAY,GAAGA,YAAY,IAAIP,eAAe,CAACM,IAAD,CAA9C;AACAM,IAAAA,MAAM,GAAGX,SAAS,CAACK,IAAD,CAAlB;;AAEA,QAAID,QAAQ,CAACE,YAAD,CAAR,KAA2B,MAA/B,EAAuC;AACrC,UAAIO,gBAAgB,GAAGb,SAAS,CAACM,YAAD,CAAhC;;AAEA,UAAIO,gBAAJ,EAAsB;AACpBL,QAAAA,YAAY,CAACC,GAAb,GAAmBI,gBAAgB,CAACJ,GAApC;AACAD,QAAAA,YAAY,CAACE,IAAb,GAAoBG,gBAAgB,CAACH,IAArC;AACD;AACF;;AAEDF,IAAAA,YAAY,CAACC,GAAb,IAAoBK,QAAQ,CAACb,QAAQ,CAACK,YAAD,EAAe,gBAAf,CAAT,EAA2C,EAA3C,CAAR,GAAyDJ,SAAS,CAACI,YAAD,CAAlE,IAAoF,CAAxG;AACAE,IAAAA,YAAY,CAACE,IAAb,IAAqBI,QAAQ,CAACb,QAAQ,CAACK,YAAD,EAAe,iBAAf,CAAT,EAA4C,EAA5C,CAAR,GAA0DH,UAAU,CAACG,YAAD,CAApE,IAAsF,CAA3G;AACD,GA7BuD,CA6BtD;;;AAGF,MAAIK,MAAJ,EAAY;AACV,QAAII,SAAS,GAAGR,UAAU,GAAGO,QAAQ,CAACb,QAAQ,CAACI,IAAD,EAAO,WAAP,CAAT,EAA8B,EAA9B,CAAR,IAA6C,CAAhD,GAAoD,CAA9E;AACA,QAAIW,UAAU,GAAGT,UAAU,GAAGO,QAAQ,CAACb,QAAQ,CAACI,IAAD,EAAO,YAAP,CAAT,EAA+B,EAA/B,CAAR,IAA8C,CAAjD,GAAqD,CAAhF;AACA,WAAOP,QAAQ,CAAC,EAAD,EAAKa,MAAL,EAAa;AAC1BF,MAAAA,GAAG,EAAEE,MAAM,CAACF,GAAP,GAAaD,YAAY,CAACC,GAA1B,GAAgCM,SADX;AAE1BL,MAAAA,IAAI,EAAEC,MAAM,CAACD,IAAP,GAAcF,YAAY,CAACE,IAA3B,GAAkCM;AAFd,KAAb,CAAf;AAID;;AAED,SAAO,IAAP;AACD,CA1CD","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport getOffsetParent from './getOffsetParent';\nimport getOffset from './getOffset';\nimport getStyle from './getStyle';\nimport scrollTop from './scrollTop';\nimport scrollLeft from './scrollLeft';\nimport nodeName from './nodeName';\nexport default (function (node, offsetParent, calcMargin) {\n  if (calcMargin === void 0) {\n    calcMargin = true;\n  }\n\n  var parentOffset = {\n    top: 0,\n    left: 0\n  };\n  var offset = null; // Fixed elements are offset from window (parentOffset = {top:0, left: 0},\n  // because it is its only offset parent\n\n  if (getStyle(node, 'position') === 'fixed') {\n    offset = node.getBoundingClientRect();\n  } else {\n    offsetParent = offsetParent || getOffsetParent(node);\n    offset = getOffset(node);\n\n    if (nodeName(offsetParent) !== 'html') {\n      var nextParentOffset = getOffset(offsetParent);\n\n      if (nextParentOffset) {\n        parentOffset.top = nextParentOffset.top;\n        parentOffset.left = nextParentOffset.left;\n      }\n    }\n\n    parentOffset.top += parseInt(getStyle(offsetParent, 'borderTopWidth'), 10) - scrollTop(offsetParent) || 0;\n    parentOffset.left += parseInt(getStyle(offsetParent, 'borderLeftWidth'), 10) - scrollLeft(offsetParent) || 0;\n  } // Subtract parent offsets and node margins\n\n\n  if (offset) {\n    var marginTop = calcMargin ? parseInt(getStyle(node, 'marginTop'), 10) || 0 : 0;\n    var marginLeft = calcMargin ? parseInt(getStyle(node, 'marginLeft'), 10) || 0 : 0;\n    return _extends({}, offset, {\n      top: offset.top - parentOffset.top - marginTop,\n      left: offset.left - parentOffset.left - marginLeft\n    });\n  }\n\n  return null;\n});"]},"metadata":{},"sourceType":"module"}