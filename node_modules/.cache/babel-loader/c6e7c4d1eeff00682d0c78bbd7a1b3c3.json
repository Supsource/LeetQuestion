{"ast":null,"code":"import { useCallback, useContext } from 'react';\nimport classNames from 'classnames';\nimport { prefix as addPrefix } from './prefix';\nimport { CustomContext } from '../CustomProvider/CustomProvider';\n/**\n * Add a prefix to all classNames.\n *\n * @param str prefix of className\n * @returns { withClassPrefix, merge, prefix }\n *  - withClassPrefix: A function of combining className and adding a prefix to each className.\n *    At the same time, the default `classPrefix` is the first className.\n *  - merge: A merge className function.\n *  - prefix: Add a prefix to className\n *  - rootPrefix\n */\n\nfunction useClassNames(str) {\n  var _ref = useContext(CustomContext) || {},\n      _ref$classPrefix = _ref.classPrefix,\n      classPrefix = _ref$classPrefix === void 0 ? 'rs' : _ref$classPrefix;\n\n  var componentName = addPrefix(classPrefix, str);\n  /**\n   * @example\n   *\n   * if str = 'button':\n   * prefix('red', { active: true }) => 'rs-button-red rs-button-active'\n   */\n\n  var prefix = useCallback(function () {\n    var mergeClasses = arguments.length ? classNames.apply(void 0, arguments).split(' ').map(function (item) {\n      return addPrefix(componentName, item);\n    }) : [];\n    return mergeClasses.filter(function (cls) {\n      return cls;\n    }).join(' ');\n  }, [componentName]);\n  /**\n   * @example\n   *\n   * if str = 'button':\n   * withClassPrefix('red', { active: true }) => 'rs-button rs-button-red rs-button-active'\n   */\n\n  var withClassPrefix = useCallback(function () {\n    for (var _len = arguments.length, classes = new Array(_len), _key = 0; _key < _len; _key++) {\n      classes[_key] = arguments[_key];\n    }\n\n    var mergeClasses = prefix(classes);\n    return mergeClasses ? componentName + \" \" + mergeClasses : componentName;\n  }, [componentName, prefix]);\n  /**\n   * @example\n   * rootPrefix('btn') => 'rs-btn'\n   * rootPrefix('btn', { active: true }) => 'rs-btn rs-active'\n   */\n\n  var rootPrefix = function rootPrefix() {\n    var mergeClasses = arguments.length ? classNames.apply(void 0, arguments).split(' ').map(function (item) {\n      return addPrefix(classPrefix, item);\n    }) : [];\n    return mergeClasses.filter(function (cls) {\n      return cls;\n    }).join(' ');\n  };\n\n  return {\n    withClassPrefix: withClassPrefix,\n    merge: classNames,\n    prefix: prefix,\n    rootPrefix: rootPrefix\n  };\n}\n\nexport default useClassNames;","map":{"version":3,"sources":["/Users/supriyomal/Desktop/hekors-website-main/node_modules/rsuite/esm/utils/useClassNames.js"],"names":["useCallback","useContext","classNames","prefix","addPrefix","CustomContext","useClassNames","str","_ref","_ref$classPrefix","classPrefix","componentName","mergeClasses","arguments","length","apply","split","map","item","filter","cls","join","withClassPrefix","_len","classes","Array","_key","rootPrefix","merge"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,UAAtB,QAAwC,OAAxC;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,SAASC,MAAM,IAAIC,SAAnB,QAAoC,UAApC;AACA,SAASC,aAAT,QAA8B,kCAA9B;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASC,aAAT,CAAuBC,GAAvB,EAA4B;AAC1B,MAAIC,IAAI,GAAGP,UAAU,CAACI,aAAD,CAAV,IAA6B,EAAxC;AAAA,MACII,gBAAgB,GAAGD,IAAI,CAACE,WAD5B;AAAA,MAEIA,WAAW,GAAGD,gBAAgB,KAAK,KAAK,CAA1B,GAA8B,IAA9B,GAAqCA,gBAFvD;;AAIA,MAAIE,aAAa,GAAGP,SAAS,CAACM,WAAD,EAAcH,GAAd,CAA7B;AACA;AACF;AACA;AACA;AACA;AACA;;AAEE,MAAIJ,MAAM,GAAGH,WAAW,CAAC,YAAY;AACnC,QAAIY,YAAY,GAAGC,SAAS,CAACC,MAAV,GAAmBZ,UAAU,CAACa,KAAX,CAAiB,KAAK,CAAtB,EAAyBF,SAAzB,EAAoCG,KAApC,CAA0C,GAA1C,EAA+CC,GAA/C,CAAmD,UAAUC,IAAV,EAAgB;AACvG,aAAOd,SAAS,CAACO,aAAD,EAAgBO,IAAhB,CAAhB;AACD,KAFqC,CAAnB,GAEd,EAFL;AAGA,WAAON,YAAY,CAACO,MAAb,CAAoB,UAAUC,GAAV,EAAe;AACxC,aAAOA,GAAP;AACD,KAFM,EAEJC,IAFI,CAEC,GAFD,CAAP;AAGD,GAPuB,EAOrB,CAACV,aAAD,CAPqB,CAAxB;AAQA;AACF;AACA;AACA;AACA;AACA;;AAEE,MAAIW,eAAe,GAAGtB,WAAW,CAAC,YAAY;AAC5C,SAAK,IAAIuB,IAAI,GAAGV,SAAS,CAACC,MAArB,EAA6BU,OAAO,GAAG,IAAIC,KAAJ,CAAUF,IAAV,CAAvC,EAAwDG,IAAI,GAAG,CAApE,EAAuEA,IAAI,GAAGH,IAA9E,EAAoFG,IAAI,EAAxF,EAA4F;AAC1FF,MAAAA,OAAO,CAACE,IAAD,CAAP,GAAgBb,SAAS,CAACa,IAAD,CAAzB;AACD;;AAED,QAAId,YAAY,GAAGT,MAAM,CAACqB,OAAD,CAAzB;AACA,WAAOZ,YAAY,GAAGD,aAAa,GAAG,GAAhB,GAAsBC,YAAzB,GAAwCD,aAA3D;AACD,GAPgC,EAO9B,CAACA,aAAD,EAAgBR,MAAhB,CAP8B,CAAjC;AAQA;AACF;AACA;AACA;AACA;;AAEE,MAAIwB,UAAU,GAAG,SAASA,UAAT,GAAsB;AACrC,QAAIf,YAAY,GAAGC,SAAS,CAACC,MAAV,GAAmBZ,UAAU,CAACa,KAAX,CAAiB,KAAK,CAAtB,EAAyBF,SAAzB,EAAoCG,KAApC,CAA0C,GAA1C,EAA+CC,GAA/C,CAAmD,UAAUC,IAAV,EAAgB;AACvG,aAAOd,SAAS,CAACM,WAAD,EAAcQ,IAAd,CAAhB;AACD,KAFqC,CAAnB,GAEd,EAFL;AAGA,WAAON,YAAY,CAACO,MAAb,CAAoB,UAAUC,GAAV,EAAe;AACxC,aAAOA,GAAP;AACD,KAFM,EAEJC,IAFI,CAEC,GAFD,CAAP;AAGD,GAPD;;AASA,SAAO;AACLC,IAAAA,eAAe,EAAEA,eADZ;AAELM,IAAAA,KAAK,EAAE1B,UAFF;AAGLC,IAAAA,MAAM,EAAEA,MAHH;AAILwB,IAAAA,UAAU,EAAEA;AAJP,GAAP;AAMD;;AAED,eAAerB,aAAf","sourcesContent":["import { useCallback, useContext } from 'react';\nimport classNames from 'classnames';\nimport { prefix as addPrefix } from './prefix';\nimport { CustomContext } from '../CustomProvider/CustomProvider';\n\n/**\n * Add a prefix to all classNames.\n *\n * @param str prefix of className\n * @returns { withClassPrefix, merge, prefix }\n *  - withClassPrefix: A function of combining className and adding a prefix to each className.\n *    At the same time, the default `classPrefix` is the first className.\n *  - merge: A merge className function.\n *  - prefix: Add a prefix to className\n *  - rootPrefix\n */\nfunction useClassNames(str) {\n  var _ref = useContext(CustomContext) || {},\n      _ref$classPrefix = _ref.classPrefix,\n      classPrefix = _ref$classPrefix === void 0 ? 'rs' : _ref$classPrefix;\n\n  var componentName = addPrefix(classPrefix, str);\n  /**\n   * @example\n   *\n   * if str = 'button':\n   * prefix('red', { active: true }) => 'rs-button-red rs-button-active'\n   */\n\n  var prefix = useCallback(function () {\n    var mergeClasses = arguments.length ? classNames.apply(void 0, arguments).split(' ').map(function (item) {\n      return addPrefix(componentName, item);\n    }) : [];\n    return mergeClasses.filter(function (cls) {\n      return cls;\n    }).join(' ');\n  }, [componentName]);\n  /**\n   * @example\n   *\n   * if str = 'button':\n   * withClassPrefix('red', { active: true }) => 'rs-button rs-button-red rs-button-active'\n   */\n\n  var withClassPrefix = useCallback(function () {\n    for (var _len = arguments.length, classes = new Array(_len), _key = 0; _key < _len; _key++) {\n      classes[_key] = arguments[_key];\n    }\n\n    var mergeClasses = prefix(classes);\n    return mergeClasses ? componentName + \" \" + mergeClasses : componentName;\n  }, [componentName, prefix]);\n  /**\n   * @example\n   * rootPrefix('btn') => 'rs-btn'\n   * rootPrefix('btn', { active: true }) => 'rs-btn rs-active'\n   */\n\n  var rootPrefix = function rootPrefix() {\n    var mergeClasses = arguments.length ? classNames.apply(void 0, arguments).split(' ').map(function (item) {\n      return addPrefix(classPrefix, item);\n    }) : [];\n    return mergeClasses.filter(function (cls) {\n      return cls;\n    }).join(' ');\n  };\n\n  return {\n    withClassPrefix: withClassPrefix,\n    merge: classNames,\n    prefix: prefix,\n    rootPrefix: rootPrefix\n  };\n}\n\nexport default useClassNames;"]},"metadata":{},"sourceType":"module"}