{"ast":null,"code":"import { useRef, useCallback, useEffect } from 'react';\nimport getHeight from 'dom-lib/getHeight';\nimport addStyle from 'dom-lib/addStyle';\nimport removeStyle from 'dom-lib/removeStyle';\nimport on from 'dom-lib/on';\nimport toggleClass from './toggleClass';\nimport isNumberOrTrue from './isNumberOrTrue';\nimport useUpdateEffect from './useUpdateEffect';\n\nvar useAffix = function useAffix(props) {\n  var tableHeight = props.tableHeight,\n      contentHeight = props.contentHeight,\n      affixHorizontalScrollbar = props.affixHorizontalScrollbar,\n      affixHeader = props.affixHeader,\n      tableOffset = props.tableOffset,\n      headerOffset = props.headerOffset,\n      headerHeight = props.headerHeight,\n      scrollbarXRef = props.scrollbarXRef,\n      affixHeaderWrapperRef = props.affixHeaderWrapperRef;\n  var scrollListener = useRef();\n  var handleAffixHorizontalScrollbar = useCallback(function () {\n    var _tableOffset$current, _scrollbarXRef$curren;\n\n    var scrollY = window.scrollY || window.pageYOffset;\n    var windowHeight = getHeight(window);\n    var height = tableHeight();\n    var bottom = typeof affixHorizontalScrollbar === 'number' ? affixHorizontalScrollbar : 0;\n    var offsetTop = ((_tableOffset$current = tableOffset.current) === null || _tableOffset$current === void 0 ? void 0 : _tableOffset$current.top) || 0;\n    var fixedScrollbar = scrollY + windowHeight < height + (offsetTop + bottom) && scrollY + windowHeight - headerHeight > offsetTop + bottom;\n\n    if (scrollbarXRef !== null && scrollbarXRef !== void 0 && (_scrollbarXRef$curren = scrollbarXRef.current) !== null && _scrollbarXRef$curren !== void 0 && _scrollbarXRef$curren.root) {\n      toggleClass(scrollbarXRef.current.root, 'fixed', fixedScrollbar);\n\n      if (fixedScrollbar) {\n        addStyle(scrollbarXRef.current.root, 'bottom', bottom + \"px\");\n      } else {\n        removeStyle(scrollbarXRef.current.root, 'bottom');\n      }\n    }\n  }, [affixHorizontalScrollbar, headerHeight, scrollbarXRef, tableHeight, tableOffset]);\n  var handleAffixTableHeader = useCallback(function () {\n    var _headerOffset$current;\n\n    var top = typeof affixHeader === 'number' ? affixHeader : 0;\n    var scrollY = window.scrollY || window.pageYOffset;\n    var offsetTop = ((_headerOffset$current = headerOffset.current) === null || _headerOffset$current === void 0 ? void 0 : _headerOffset$current.top) || 0;\n    var fixedHeader = scrollY - (offsetTop - top) >= 0 && scrollY < offsetTop - top + contentHeight.current;\n\n    if (affixHeaderWrapperRef.current) {\n      toggleClass(affixHeaderWrapperRef.current, 'fixed', fixedHeader);\n    }\n  }, [affixHeader, affixHeaderWrapperRef, contentHeight, headerOffset]);\n  var handleWindowScroll = useCallback(function () {\n    if (isNumberOrTrue(affixHeader)) {\n      handleAffixTableHeader();\n    }\n\n    if (isNumberOrTrue(affixHorizontalScrollbar)) {\n      handleAffixHorizontalScrollbar();\n    }\n  }, [affixHeader, affixHorizontalScrollbar, handleAffixTableHeader, handleAffixHorizontalScrollbar]);\n  /**\n   * Update the position of the fixed element after the height of the table changes.\n   * fix: https://github.com/rsuite/rsuite/issues/1716\n   */\n\n  useUpdateEffect(handleWindowScroll, [tableHeight]);\n  useEffect(function () {\n    if (isNumberOrTrue(affixHeader) || isNumberOrTrue(affixHorizontalScrollbar)) {\n      scrollListener.current = on(window, 'scroll', handleWindowScroll);\n    }\n\n    return function () {\n      var _scrollListener$curre;\n\n      (_scrollListener$curre = scrollListener.current) === null || _scrollListener$curre === void 0 ? void 0 : _scrollListener$curre.off();\n    }; // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n};\n\nexport default useAffix;","map":{"version":3,"sources":["/Users/supriyomal/Documents/GitHub/LeetQuestion/node_modules/rsuite-table/es/utils/useAffix.js"],"names":["useRef","useCallback","useEffect","getHeight","addStyle","removeStyle","on","toggleClass","isNumberOrTrue","useUpdateEffect","useAffix","props","tableHeight","contentHeight","affixHorizontalScrollbar","affixHeader","tableOffset","headerOffset","headerHeight","scrollbarXRef","affixHeaderWrapperRef","scrollListener","handleAffixHorizontalScrollbar","_tableOffset$current","_scrollbarXRef$curren","scrollY","window","pageYOffset","windowHeight","height","bottom","offsetTop","current","top","fixedScrollbar","root","handleAffixTableHeader","_headerOffset$current","fixedHeader","handleWindowScroll","_scrollListener$curre","off"],"mappings":"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","sourcesContent":["import { useRef, useCallback, useEffect } from 'react';\nimport getHeight from 'dom-lib/getHeight';\nimport addStyle from 'dom-lib/addStyle';\nimport removeStyle from 'dom-lib/removeStyle';\nimport on from 'dom-lib/on';\nimport toggleClass from './toggleClass';\nimport isNumberOrTrue from './isNumberOrTrue';\nimport useUpdateEffect from './useUpdateEffect';\n\nvar useAffix = function useAffix(props) {\n  var tableHeight = props.tableHeight,\n      contentHeight = props.contentHeight,\n      affixHorizontalScrollbar = props.affixHorizontalScrollbar,\n      affixHeader = props.affixHeader,\n      tableOffset = props.tableOffset,\n      headerOffset = props.headerOffset,\n      headerHeight = props.headerHeight,\n      scrollbarXRef = props.scrollbarXRef,\n      affixHeaderWrapperRef = props.affixHeaderWrapperRef;\n  var scrollListener = useRef();\n  var handleAffixHorizontalScrollbar = useCallback(function () {\n    var _tableOffset$current, _scrollbarXRef$curren;\n\n    var scrollY = window.scrollY || window.pageYOffset;\n    var windowHeight = getHeight(window);\n    var height = tableHeight();\n    var bottom = typeof affixHorizontalScrollbar === 'number' ? affixHorizontalScrollbar : 0;\n    var offsetTop = ((_tableOffset$current = tableOffset.current) === null || _tableOffset$current === void 0 ? void 0 : _tableOffset$current.top) || 0;\n    var fixedScrollbar = scrollY + windowHeight < height + (offsetTop + bottom) && scrollY + windowHeight - headerHeight > offsetTop + bottom;\n\n    if (scrollbarXRef !== null && scrollbarXRef !== void 0 && (_scrollbarXRef$curren = scrollbarXRef.current) !== null && _scrollbarXRef$curren !== void 0 && _scrollbarXRef$curren.root) {\n      toggleClass(scrollbarXRef.current.root, 'fixed', fixedScrollbar);\n\n      if (fixedScrollbar) {\n        addStyle(scrollbarXRef.current.root, 'bottom', bottom + \"px\");\n      } else {\n        removeStyle(scrollbarXRef.current.root, 'bottom');\n      }\n    }\n  }, [affixHorizontalScrollbar, headerHeight, scrollbarXRef, tableHeight, tableOffset]);\n  var handleAffixTableHeader = useCallback(function () {\n    var _headerOffset$current;\n\n    var top = typeof affixHeader === 'number' ? affixHeader : 0;\n    var scrollY = window.scrollY || window.pageYOffset;\n    var offsetTop = ((_headerOffset$current = headerOffset.current) === null || _headerOffset$current === void 0 ? void 0 : _headerOffset$current.top) || 0;\n    var fixedHeader = scrollY - (offsetTop - top) >= 0 && scrollY < offsetTop - top + contentHeight.current;\n\n    if (affixHeaderWrapperRef.current) {\n      toggleClass(affixHeaderWrapperRef.current, 'fixed', fixedHeader);\n    }\n  }, [affixHeader, affixHeaderWrapperRef, contentHeight, headerOffset]);\n  var handleWindowScroll = useCallback(function () {\n    if (isNumberOrTrue(affixHeader)) {\n      handleAffixTableHeader();\n    }\n\n    if (isNumberOrTrue(affixHorizontalScrollbar)) {\n      handleAffixHorizontalScrollbar();\n    }\n  }, [affixHeader, affixHorizontalScrollbar, handleAffixTableHeader, handleAffixHorizontalScrollbar]);\n  /**\n   * Update the position of the fixed element after the height of the table changes.\n   * fix: https://github.com/rsuite/rsuite/issues/1716\n   */\n\n  useUpdateEffect(handleWindowScroll, [tableHeight]);\n  useEffect(function () {\n    if (isNumberOrTrue(affixHeader) || isNumberOrTrue(affixHorizontalScrollbar)) {\n      scrollListener.current = on(window, 'scroll', handleWindowScroll);\n    }\n\n    return function () {\n      var _scrollListener$curre;\n\n      (_scrollListener$curre = scrollListener.current) === null || _scrollListener$curre === void 0 ? void 0 : _scrollListener$curre.off();\n    }; // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n};\n\nexport default useAffix;"]},"metadata":{},"sourceType":"module"}